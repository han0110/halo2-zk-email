// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;
import "../VerifierFuncAbst.sol";

contract VerifierFunc3 is VerifierFuncAbst {
    function verifyPartial(
        uint256[] memory pubInputs,
        bytes memory proof,
        bool success,
        bytes32[] memory _transcript
    ) public view override returns (bool, bytes32[] memory) {
        bytes32[2776] memory transcript;
        for(uint i=0; i<_transcript.length; i++) {
            transcript[i] = _transcript[i];
        }
        assembly {{
            
            let f_p
            := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
            let
                f_q
            := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
            function validate_ec_point(x, y) -> valid {
                {
                    let x_lt_p := lt(
                        x,
                        0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
                    )
                    let y_lt_p := lt(
                        y,
                        0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
                    )
                    valid := and(x_lt_p, y_lt_p)
                }
                {
                    let x_is_zero := eq(x, 0)
                    let y_is_zero := eq(y, 0)
                    let x_or_y_is_zero := or(x_is_zero, y_is_zero)
                    let x_and_y_is_not_zero := not(x_or_y_is_zero)
                    valid := and(x_and_y_is_not_zero, valid)
                }
                {
                    let y_square := mulmod(
                        y,
                        y,
                        0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
                    )
                    let x_square := mulmod(
                        x,
                        x,
                        0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
                    )
                    let x_cube := mulmod(
                        x_square,
                        x,
                        0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
                    )
                    let x_cube_plus_3 := addmod(
                        x_cube,
                        3,
                        0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
                    )
                    let y_square_eq_x_cube_plus_3 := eq(x_cube_plus_3, y_square)
                    valid := and(y_square_eq_x_cube_plus_3, valid)
                }
            }
    {            let result := mulmod(mload(add(transcript, 0x1e80)), mload(add(transcript, 0x9380)), f_q)mstore(add(transcript, 0xde00), result)        }
mstore(add(transcript, 0xde20), mulmod(mload(add(transcript, 0xde00)), mload(add(transcript, 0x99e0)), f_q))
mstore(add(transcript, 0xde40), mulmod(sub(f_q, mload(add(transcript, 0xde20))), mload(add(transcript, 0xa220)), f_q))
mstore(add(transcript, 0xde60), mulmod(mload(add(transcript, 0xb540)), mload(add(transcript, 0xa220)), f_q))
mstore(add(transcript, 0xde80), addmod(mload(add(transcript, 0xdde0)), mload(add(transcript, 0xde40)), f_q))
{            let result := mulmod(mload(add(transcript, 0x1ea0)), mload(add(transcript, 0x9380)), f_q)mstore(add(transcript, 0xdea0), result)        }
mstore(add(transcript, 0xdec0), mulmod(mload(add(transcript, 0xdea0)), mload(add(transcript, 0x99e0)), f_q))
mstore(add(transcript, 0xdee0), mulmod(sub(f_q, mload(add(transcript, 0xdec0))), mload(add(transcript, 0xa240)), f_q))
mstore(add(transcript, 0xdf00), mulmod(mload(add(transcript, 0xb540)), mload(add(transcript, 0xa240)), f_q))
mstore(add(transcript, 0xdf20), addmod(mload(add(transcript, 0xde80)), mload(add(transcript, 0xdee0)), f_q))
mstore(add(transcript, 0xdf40), mulmod(mload(add(transcript, 0x9000)), mload(add(transcript, 0x97a0)), f_q))
mstore(add(transcript, 0xdf60), mulmod(mload(add(transcript, 0x9020)), mload(add(transcript, 0x97a0)), f_q))
mstore(add(transcript, 0xdf80), mulmod(mload(add(transcript, 0x9040)), mload(add(transcript, 0x97a0)), f_q))
mstore(add(transcript, 0xdfa0), mulmod(mload(add(transcript, 0x9060)), mload(add(transcript, 0x97a0)), f_q))
{            let result := mulmod(mload(add(transcript, 0x9080)), mload(add(transcript, 0x9380)), f_q)mstore(add(transcript, 0xdfc0), result)        }
mstore(add(transcript, 0xdfe0), mulmod(mload(add(transcript, 0xdfc0)), mload(add(transcript, 0x99e0)), f_q))
mstore(add(transcript, 0xe000), mulmod(sub(f_q, mload(add(transcript, 0xdfe0))), mload(add(transcript, 0xa260)), f_q))
mstore(add(transcript, 0xe020), mulmod(mload(add(transcript, 0xb540)), mload(add(transcript, 0xa260)), f_q))
mstore(add(transcript, 0xe040), mulmod(mload(add(transcript, 0xdf40)), mload(add(transcript, 0xa260)), f_q))
mstore(add(transcript, 0xe060), mulmod(mload(add(transcript, 0xdf60)), mload(add(transcript, 0xa260)), f_q))
mstore(add(transcript, 0xe080), mulmod(mload(add(transcript, 0xdf80)), mload(add(transcript, 0xa260)), f_q))
mstore(add(transcript, 0xe0a0), mulmod(mload(add(transcript, 0xdfa0)), mload(add(transcript, 0xa260)), f_q))
mstore(add(transcript, 0xe0c0), addmod(mload(add(transcript, 0xdf20)), mload(add(transcript, 0xe000)), f_q))
{            let result := mulmod(mload(add(transcript, 0x1ba0)), mload(add(transcript, 0x9380)), f_q)mstore(add(transcript, 0xe0e0), result)        }
mstore(add(transcript, 0xe100), mulmod(mload(add(transcript, 0xe0e0)), mload(add(transcript, 0x99e0)), f_q))
mstore(add(transcript, 0xe120), mulmod(sub(f_q, mload(add(transcript, 0xe100))), mload(add(transcript, 0xa280)), f_q))
mstore(add(transcript, 0xe140), mulmod(mload(add(transcript, 0xb540)), mload(add(transcript, 0xa280)), f_q))
mstore(add(transcript, 0xe160), addmod(mload(add(transcript, 0xe0c0)), mload(add(transcript, 0xe120)), f_q))
mstore(add(transcript, 0xe180), mulmod(mload(add(transcript, 0xe160)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe1a0), mulmod(mload(add(transcript, 0xb5c0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe1c0), mulmod(mload(add(transcript, 0xb640)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe1e0), mulmod(mload(add(transcript, 0xb6e0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe200), mulmod(mload(add(transcript, 0xb780)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe220), mulmod(mload(add(transcript, 0xb820)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe240), mulmod(mload(add(transcript, 0xb8c0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe260), mulmod(mload(add(transcript, 0xb960)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe280), mulmod(mload(add(transcript, 0xba00)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe2a0), mulmod(mload(add(transcript, 0xbaa0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe2c0), mulmod(mload(add(transcript, 0xbb40)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe2e0), mulmod(mload(add(transcript, 0xbbe0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe300), mulmod(mload(add(transcript, 0xbc80)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe320), mulmod(mload(add(transcript, 0xbd20)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe340), mulmod(mload(add(transcript, 0xbdc0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe360), mulmod(mload(add(transcript, 0xbe60)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe380), mulmod(mload(add(transcript, 0xbf00)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe3a0), mulmod(mload(add(transcript, 0xbfa0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe3c0), mulmod(mload(add(transcript, 0xc040)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe3e0), mulmod(mload(add(transcript, 0xc0e0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe400), mulmod(mload(add(transcript, 0xc180)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe420), mulmod(mload(add(transcript, 0xc220)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe440), mulmod(mload(add(transcript, 0xc2c0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe460), mulmod(mload(add(transcript, 0xc360)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe480), mulmod(mload(add(transcript, 0xc400)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe4a0), mulmod(mload(add(transcript, 0xc4a0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe4c0), mulmod(mload(add(transcript, 0xc9e0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe4e0), mulmod(mload(add(transcript, 0xc5e0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe500), mulmod(mload(add(transcript, 0xc680)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe520), mulmod(mload(add(transcript, 0xc720)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe540), mulmod(mload(add(transcript, 0xc7c0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe560), mulmod(mload(add(transcript, 0xc860)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe580), mulmod(mload(add(transcript, 0xc900)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe5a0), mulmod(mload(add(transcript, 0xca60)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe5c0), mulmod(mload(add(transcript, 0xcb00)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe5e0), mulmod(mload(add(transcript, 0xcba0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe600), mulmod(mload(add(transcript, 0xcc40)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe620), mulmod(mload(add(transcript, 0xcce0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe640), mulmod(mload(add(transcript, 0xcd80)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe660), mulmod(mload(add(transcript, 0xce20)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe680), mulmod(mload(add(transcript, 0xcec0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe6a0), mulmod(mload(add(transcript, 0xcf60)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe6c0), mulmod(mload(add(transcript, 0xd000)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe6e0), mulmod(mload(add(transcript, 0xd0a0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe700), mulmod(mload(add(transcript, 0xd140)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe720), mulmod(mload(add(transcript, 0xd1e0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe740), mulmod(mload(add(transcript, 0xd280)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe760), mulmod(mload(add(transcript, 0xd320)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe780), mulmod(mload(add(transcript, 0xd3c0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe7a0), mulmod(mload(add(transcript, 0xd460)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe7c0), mulmod(mload(add(transcript, 0xd500)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe7e0), mulmod(mload(add(transcript, 0xd5a0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe800), mulmod(mload(add(transcript, 0xd640)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe820), mulmod(mload(add(transcript, 0xd6e0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe840), mulmod(mload(add(transcript, 0xd780)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe860), mulmod(mload(add(transcript, 0xd820)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe880), mulmod(mload(add(transcript, 0xd8c0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe8a0), mulmod(mload(add(transcript, 0xd960)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe8c0), mulmod(mload(add(transcript, 0xda00)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe8e0), mulmod(mload(add(transcript, 0xdaa0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe900), mulmod(mload(add(transcript, 0xdb40)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe920), mulmod(mload(add(transcript, 0xdbe0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe940), mulmod(mload(add(transcript, 0xdc80)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe960), mulmod(mload(add(transcript, 0xdd20)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe980), mulmod(mload(add(transcript, 0xddc0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe9a0), mulmod(mload(add(transcript, 0xde60)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe9c0), mulmod(mload(add(transcript, 0xdf00)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xe9e0), mulmod(mload(add(transcript, 0xe020)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xea00), mulmod(mload(add(transcript, 0xe040)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xea20), mulmod(mload(add(transcript, 0xe060)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xea40), mulmod(mload(add(transcript, 0xe080)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xea60), mulmod(mload(add(transcript, 0xe0a0)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xea80), mulmod(mload(add(transcript, 0xe140)), mload(add(transcript, 0xa2c0)), f_q))
mstore(add(transcript, 0xeaa0), addmod(mload(add(transcript, 0xb520)), mload(add(transcript, 0xe180)), f_q))
mstore(add(transcript, 0xeac0), mulmod(1, mload(add(transcript, 0x97e0)), f_q))
{            let result := mulmod(mload(add(transcript, 0x1740)), mload(add(transcript, 0x93a0)), f_q)result := addmod(mulmod(mload(add(transcript, 0x1760)), mload(add(transcript, 0x93c0)), f_q), result, f_q)mstore(add(transcript, 0xeae0), result)        }
mstore(add(transcript, 0xeb00), mulmod(mload(add(transcript, 0xeae0)), mload(add(transcript, 0x9a00)), f_q))
mstore(add(transcript, 0xeb20), mulmod(sub(f_q, mload(add(transcript, 0xeb00))), 1, f_q))
mstore(add(transcript, 0xeb40), mulmod(mload(add(transcript, 0xeac0)), 1, f_q))
{            let result := mulmod(mload(add(transcript, 0x2120)), mload(add(transcript, 0x93a0)), f_q)result := addmod(mulmod(mload(add(transcript, 0x2140)), mload(add(transcript, 0x93c0)), f_q), result, f_q)mstore(add(transcript, 0xeb60), result)        }
mstore(add(transcript, 0xeb80), mulmod(mload(add(transcript, 0xeb60)), mload(add(transcript, 0x9a00)), f_q))
mstore(add(transcript, 0xeba0), mulmod(sub(f_q, mload(add(transcript, 0xeb80))), mload(add(transcript, 0x26a0)), f_q))
mstore(add(transcript, 0xebc0), mulmod(mload(add(transcript, 0xeac0)), mload(add(transcript, 0x26a0)), f_q))
mstore(add(transcript, 0xebe0), addmod(mload(add(transcript, 0xeb20)), mload(add(transcript, 0xeba0)), f_q))
{            let result := mulmod(mload(add(transcript, 0x21c0)), mload(add(transcript, 0x93a0)), f_q)result := addmod(mulmod(mload(add(transcript, 0x21e0)), mload(add(transcript, 0x93c0)), f_q), result, f_q)mstore(add(transcript, 0xec00), result)        }
mstore(add(transcript, 0xec20), mulmod(mload(add(transcript, 0xec00)), mload(add(transcript, 0x9a00)), f_q))
mstore(add(transcript, 0xec40), mulmod(sub(f_q, mload(add(transcript, 0xec20))), mload(add(transcript, 0x9a40)), f_q))
mstore(add(transcript, 0xec60), mulmod(mload(add(transcript, 0xeac0)), mload(add(transcript, 0x9a40)), f_q))
mstore(add(transcript, 0xec80), addmod(mload(add(transcript, 0xebe0)), mload(add(transcript, 0xec40)), f_q))
{            let result := mulmod(mload(add(transcript, 0x2260)), mload(add(transcript, 0x93a0)), f_q)result := addmod(mulmod(mload(add(transcript, 0x2280)), mload(add(transcript, 0x93c0)), f_q), result, f_q)mstore(add(transcript, 0xeca0), result)        }
mstore(add(transcript, 0xecc0), mulmod(mload(add(transcript, 0xeca0)), mload(add(transcript, 0x9a00)), f_q))
mstore(add(transcript, 0xece0), mulmod(sub(f_q, mload(add(transcript, 0xecc0))), mload(add(transcript, 0x9a60)), f_q))
mstore(add(transcript, 0xed00), mulmod(mload(add(transcript, 0xeac0)), mload(add(transcript, 0x9a60)), f_q))
mstore(add(transcript, 0xed20), addmod(mload(add(transcript, 0xec80)), mload(add(transcript, 0xece0)), f_q))
{            let result := mulmod(mload(add(transcript, 0x2300)), mload(add(transcript, 0x93a0)), f_q)result := addmod(mulmod(mload(add(transcript, 0x2320)), mload(add(transcript, 0x93c0)), f_q), result, f_q)mstore(add(transcript, 0xed40), result)        }
mstore(add(transcript, 0xed60), mulmod(mload(add(transcript, 0xed40)), mload(add(transcript, 0x9a00)), f_q))
mstore(add(transcript, 0xed80), mulmod(sub(f_q, mload(add(transcript, 0xed60))), mload(add(transcript, 0x9a80)), f_q))
mstore(add(transcript, 0xeda0), mulmod(mload(add(transcript, 0xeac0)), mload(add(transcript, 0x9a80)), f_q))
mstore(add(transcript, 0xedc0), addmod(mload(add(transcript, 0xed20)), mload(add(transcript, 0xed80)), f_q))
{            let result := mulmod(mload(add(transcript, 0x23a0)), mload(add(transcript, 0x93a0)), f_q)result := addmod(mulmod(mload(add(transcript, 0x23c0)), mload(add(transcript, 0x93c0)), f_q), result, f_q)mstore(add(transcript, 0xede0), result)        }
mstore(add(transcript, 0xee00), mulmod(mload(add(transcript, 0xede0)), mload(add(transcript, 0x9a00)), f_q))
mstore(add(transcript, 0xee20), mulmod(sub(f_q, mload(add(transcript, 0xee00))), mload(add(transcript, 0x9aa0)), f_q))
mstore(add(transcript, 0xee40), mulmod(mload(add(transcript, 0xeac0)), mload(add(transcript, 0x9aa0)), f_q))
mstore(add(transcript, 0xee60), addmod(mload(add(transcript, 0xedc0)), mload(add(transcript, 0xee20)), f_q))
{            let result := mulmod(mload(add(transcript, 0x2440)), mload(add(transcript, 0x93a0)), f_q)result := addmod(mulmod(mload(add(transcript, 0x2460)), mload(add(transcript, 0x93c0)), f_q), result, f_q)mstore(add(transcript, 0xee80), result)        }
mstore(add(transcript, 0xeea0), mulmod(mload(add(transcript, 0xee80)), mload(add(transcript, 0x9a00)), f_q))
mstore(add(transcript, 0xeec0), mulmod(sub(f_q, mload(add(transcript, 0xeea0))), mload(add(transcript, 0x9ac0)), f_q))
mstore(add(transcript, 0xeee0), mulmod(mload(add(transcript, 0xeac0)), mload(add(transcript, 0x9ac0)), f_q))
mstore(add(transcript, 0xef00), addmod(mload(add(transcript, 0xee60)), mload(add(transcript, 0xeec0)), f_q))
{            let result := mulmod(mload(add(transcript, 0x24e0)), mload(add(transcript, 0x93a0)), f_q)result := addmod(mulmod(mload(add(transcript, 0x2500)), mload(add(transcript, 0x93c0)), f_q), result, f_q)mstore(add(transcript, 0xef20), result)        }
mstore(add(transcript, 0xef40), mulmod(mload(add(transcript, 0xef20)), mload(add(transcript, 0x9a00)), f_q))
mstore(add(transcript, 0xef60), mulmod(sub(f_q, mload(add(transcript, 0xef40))), mload(add(transcript, 0x9ae0)), f_q))
mstore(add(transcript, 0xef80), mulmod(mload(add(transcript, 0xeac0)), mload(add(transcript, 0x9ae0)), f_q))
mstore(add(transcript, 0xefa0), addmod(mload(add(transcript, 0xef00)), mload(add(transcript, 0xef60)), f_q))
{            let result := mulmod(mload(add(transcript, 0x2580)), mload(add(transcript, 0x93a0)), f_q)result := addmod(mulmod(mload(add(transcript, 0x25a0)), mload(add(transcript, 0x93c0)), f_q), result, f_q)mstore(add(transcript, 0xefc0), result)        }
mstore(add(transcript, 0xefe0), mulmod(mload(add(transcript, 0xefc0)), mload(add(transcript, 0x9a00)), f_q))
mstore(add(transcript, 0xf000), mulmod(sub(f_q, mload(add(transcript, 0xefe0))), mload(add(transcript, 0x9b00)), f_q))
mstore(add(transcript, 0xf020), mulmod(mload(add(transcript, 0xeac0)), mload(add(transcript, 0x9b00)), f_q))
mstore(add(transcript, 0xf040), addmod(mload(add(transcript, 0xefa0)), mload(add(transcript, 0xf000)), f_q))
{            let result := mulmod(mload(add(transcript, 0x2620)), mload(add(transcript, 0x93a0)), f_q)result := addmod(mulmod(mload(add(transcript, 0x2640)), mload(add(transcript, 0x93c0)), f_q), result, f_q)mstore(add(transcript, 0xf060), result)        }
mstore(add(transcript, 0xf080), mulmod(mload(add(transcript, 0xf060)), mload(add(transcript, 0x9a00)), f_q))
mstore(add(transcript, 0xf0a0), mulmod(sub(f_q, mload(add(transcript, 0xf080))), mload(add(transcript, 0x9b20)), f_q))
mstore(add(transcript, 0xf0c0), mulmod(mload(add(transcript, 0xeac0)), mload(add(transcript, 0x9b20)), f_q))
mstore(add(transcript, 0xf0e0), addmod(mload(add(transcript, 0xf040)), mload(add(transcript, 0xf0a0)), f_q))
mstore(add(transcript, 0xf100), mulmod(mload(add(transcript, 0xf0e0)), mload(add(transcript, 0xa2e0)), f_q))
mstore(add(transcript, 0xf120), mulmod(mload(add(transcript, 0xeb40)), mload(add(transcript, 0xa2e0)), f_q))
mstore(add(transcript, 0xf140), mulmod(mload(add(transcript, 0xebc0)), mload(add(transcript, 0xa2e0)), f_q))
mstore(add(transcript, 0xf160), mulmod(mload(add(transcript, 0xec60)), mload(add(transcript, 0xa2e0)), f_q))
mstore(add(transcript, 0xf180), mulmod(mload(add(transcript, 0xed00)), mload(add(transcript, 0xa2e0)), f_q))
mstore(add(transcript, 0xf1a0), mulmod(mload(add(transcript, 0xeda0)), mload(add(transcript, 0xa2e0)), f_q))
mstore(add(transcript, 0xf1c0), mulmod(mload(add(transcript, 0xee40)), mload(add(transcript, 0xa2e0)), f_q))
mstore(add(transcript, 0xf1e0), mulmod(mload(add(transcript, 0xeee0)), mload(add(transcript, 0xa2e0)), f_q))
mstore(add(transcript, 0xf200), mulmod(mload(add(transcript, 0xef80)), mload(add(transcript, 0xa2e0)), f_q))
mstore(add(transcript, 0xf220), mulmod(mload(add(transcript, 0xf020)), mload(add(transcript, 0xa2e0)), f_q))
mstore(add(transcript, 0xf240), mulmod(mload(add(transcript, 0xf0c0)), mload(add(transcript, 0xa2e0)), f_q))
mstore(add(transcript, 0xf260), addmod(mload(add(transcript, 0xeaa0)), mload(add(transcript, 0xf100)), f_q))
mstore(add(transcript, 0xf280), mulmod(1, mload(add(transcript, 0x9820)), f_q))
{            let result := mulmod(mload(add(transcript, 0x1ec0)), mload(add(transcript, 0x9400)), f_q)result := addmod(mulmod(mload(add(transcript, 0x1ee0)), mload(add(transcript, 0x9420)), f_q), result, f_q)result := addmod(mulmod(mload(add(transcript, 0x1f00)), mload(add(transcript, 0x9440)), f_q), result, f_q)mstore(add(transcript, 0xf2a0), result)        }
mstore(add(transcript, 0xf2c0), mulmod(mload(add(transcript, 0xf2a0)), mload(add(transcript, 0x9a20)), f_q))
mstore(add(transcript, 0xf2e0), mulmod(sub(f_q, mload(add(transcript, 0xf2c0))), 1, f_q))
mstore(add(transcript, 0xf300), mulmod(mload(add(transcript, 0xf280)), 1, f_q))
{            let result := mulmod(mload(add(transcript, 0x1f20)), mload(add(transcript, 0x9400)), f_q)result := addmod(mulmod(mload(add(transcript, 0x1f40)), mload(add(transcript, 0x9420)), f_q), result, f_q)result := addmod(mulmod(mload(add(transcript, 0x1f60)), mload(add(transcript, 0x9440)), f_q), result, f_q)mstore(add(transcript, 0xf320), result)        }
mstore(add(transcript, 0xf340), mulmod(mload(add(transcript, 0xf320)), mload(add(transcript, 0x9a20)), f_q))
mstore(add(transcript, 0xf360), mulmod(sub(f_q, mload(add(transcript, 0xf340))), mload(add(transcript, 0x26a0)), f_q))
mstore(add(transcript, 0xf380), mulmod(mload(add(transcript, 0xf280)), mload(add(transcript, 0x26a0)), f_q))
mstore(add(transcript, 0xf3a0), addmod(mload(add(transcript, 0xf2e0)), mload(add(transcript, 0xf360)), f_q))
{            let result := mulmod(mload(add(transcript, 0x1f80)), mload(add(transcript, 0x9400)), f_q)result := addmod(mulmod(mload(add(transcript, 0x1fa0)), mload(add(transcript, 0x9420)), f_q), result, f_q)result := addmod(mulmod(mload(add(transcript, 0x1fc0)), mload(add(transcript, 0x9440)), f_q), result, f_q)mstore(add(transcript, 0xf3c0), result)        }
mstore(add(transcript, 0xf3e0), mulmod(mload(add(transcript, 0xf3c0)), mload(add(transcript, 0x9a20)), f_q))
mstore(add(transcript, 0xf400), mulmod(sub(f_q, mload(add(transcript, 0xf3e0))), mload(add(transcript, 0x9a40)), f_q))
mstore(add(transcript, 0xf420), mulmod(mload(add(transcript, 0xf280)), mload(add(transcript, 0x9a40)), f_q))
mstore(add(transcript, 0xf440), addmod(mload(add(transcript, 0xf3a0)), mload(add(transcript, 0xf400)), f_q))
{            let result := mulmod(mload(add(transcript, 0x1fe0)), mload(add(transcript, 0x9400)), f_q)result := addmod(mulmod(mload(add(transcript, 0x2000)), mload(add(transcript, 0x9420)), f_q), result, f_q)result := addmod(mulmod(mload(add(transcript, 0x2020)), mload(add(transcript, 0x9440)), f_q), result, f_q)mstore(add(transcript, 0xf460), result)        }
mstore(add(transcript, 0xf480), mulmod(mload(add(transcript, 0xf460)), mload(add(transcript, 0x9a20)), f_q))
mstore(add(transcript, 0xf4a0), mulmod(sub(f_q, mload(add(transcript, 0xf480))), mload(add(transcript, 0x9a60)), f_q))
mstore(add(transcript, 0xf4c0), mulmod(mload(add(transcript, 0xf280)), mload(add(transcript, 0x9a60)), f_q))
mstore(add(transcript, 0xf4e0), addmod(mload(add(transcript, 0xf440)), mload(add(transcript, 0xf4a0)), f_q))
{            let result := mulmod(mload(add(transcript, 0x2040)), mload(add(transcript, 0x9400)), f_q)result := addmod(mulmod(mload(add(transcript, 0x2060)), mload(add(transcript, 0x9420)), f_q), result, f_q)result := addmod(mulmod(mload(add(transcript, 0x2080)), mload(add(transcript, 0x9440)), f_q), result, f_q)mstore(add(transcript, 0xf500), result)        }
mstore(add(transcript, 0xf520), mulmod(mload(add(transcript, 0xf500)), mload(add(transcript, 0x9a20)), f_q))
mstore(add(transcript, 0xf540), mulmod(sub(f_q, mload(add(transcript, 0xf520))), mload(add(transcript, 0x9a80)), f_q))
mstore(add(transcript, 0xf560), mulmod(mload(add(transcript, 0xf280)), mload(add(transcript, 0x9a80)), f_q))
mstore(add(transcript, 0xf580), addmod(mload(add(transcript, 0xf4e0)), mload(add(transcript, 0xf540)), f_q))
mstore(add(transcript, 0xf5a0), mulmod(mload(add(transcript, 0xf580)), mload(add(transcript, 0xa300)), f_q))
mstore(add(transcript, 0xf5c0), mulmod(mload(add(transcript, 0xf300)), mload(add(transcript, 0xa300)), f_q))
mstore(add(transcript, 0xf5e0), mulmod(mload(add(transcript, 0xf380)), mload(add(transcript, 0xa300)), f_q))
mstore(add(transcript, 0xf600), mulmod(mload(add(transcript, 0xf420)), mload(add(transcript, 0xa300)), f_q))
mstore(add(transcript, 0xf620), mulmod(mload(add(transcript, 0xf4c0)), mload(add(transcript, 0xa300)), f_q))
mstore(add(transcript, 0xf640), mulmod(mload(add(transcript, 0xf560)), mload(add(transcript, 0xa300)), f_q))
mstore(add(transcript, 0xf660), addmod(mload(add(transcript, 0xf260)), mload(add(transcript, 0xf5a0)), f_q))
mstore(add(transcript, 0xf680), mulmod(1, mload(add(transcript, 0x9320)), f_q))
mstore(add(transcript, 0xf6a0), mulmod(1, mload(add(transcript, 0x27a0)), f_q))
mstore(add(transcript, 0xf6c0), 0x0000000000000000000000000000000000000000000000000000000000000001)
                    mstore(add(transcript, 0xf6e0), 0x0000000000000000000000000000000000000000000000000000000000000002)
mstore(add(transcript, 0xf700), mload(add(transcript, 0xf660)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0xf6c0), 0x60, add(transcript, 0xf6c0), 0x40), 1), success)
mstore(add(transcript, 0xf720), mload(add(transcript, 0xf6c0)))
                    mstore(add(transcript, 0xf740), mload(add(transcript, 0xf6e0)))
mstore(add(transcript, 0xf760), mload(add(transcript, 0x80)))
                    mstore(add(transcript, 0xf780), mload(add(transcript, 0xa0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0xf720), 0x80, add(transcript, 0xf720), 0x40), 1), success)
mstore(add(transcript, 0xf7a0), mload(add(transcript, 0xc0)))
                    mstore(add(transcript, 0xf7c0), mload(add(transcript, 0xe0)))
mstore(add(transcript, 0xf7e0), mload(add(transcript, 0xa820)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0xf7a0), 0x60, add(transcript, 0xf7a0), 0x40), 1), success)
mstore(add(transcript, 0xf800), mload(add(transcript, 0xf720)))
                    mstore(add(transcript, 0xf820), mload(add(transcript, 0xf740)))
mstore(add(transcript, 0xf840), mload(add(transcript, 0xf7a0)))
                    mstore(add(transcript, 0xf860), mload(add(transcript, 0xf7c0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0xf800), 0x80, add(transcript, 0xf800), 0x40), 1), success)
mstore(add(transcript, 0xf880), mload(add(transcript, 0x100)))
                    mstore(add(transcript, 0xf8a0), mload(add(transcript, 0x120)))
mstore(add(transcript, 0xf8c0), mload(add(transcript, 0xa840)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0xf880), 0x60, add(transcript, 0xf880), 0x40), 1), success)
mstore(add(transcript, 0xf8e0), mload(add(transcript, 0xf800)))
                    mstore(add(transcript, 0xf900), mload(add(transcript, 0xf820)))
mstore(add(transcript, 0xf920), mload(add(transcript, 0xf880)))
                    mstore(add(transcript, 0xf940), mload(add(transcript, 0xf8a0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0xf8e0), 0x80, add(transcript, 0xf8e0), 0x40), 1), success)
mstore(add(transcript, 0xf960), mload(add(transcript, 0x140)))
                    mstore(add(transcript, 0xf980), mload(add(transcript, 0x160)))
mstore(add(transcript, 0xf9a0), mload(add(transcript, 0xa860)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0xf960), 0x60, add(transcript, 0xf960), 0x40), 1), success)
mstore(add(transcript, 0xf9c0), mload(add(transcript, 0xf8e0)))
                    mstore(add(transcript, 0xf9e0), mload(add(transcript, 0xf900)))
mstore(add(transcript, 0xfa00), mload(add(transcript, 0xf960)))
                    mstore(add(transcript, 0xfa20), mload(add(transcript, 0xf980)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0xf9c0), 0x80, add(transcript, 0xf9c0), 0x40), 1), success)
mstore(add(transcript, 0xfa40), mload(add(transcript, 0x180)))
                    mstore(add(transcript, 0xfa60), mload(add(transcript, 0x1a0)))
mstore(add(transcript, 0xfa80), mload(add(transcript, 0xa880)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0xfa40), 0x60, add(transcript, 0xfa40), 0x40), 1), success)
mstore(add(transcript, 0xfaa0), mload(add(transcript, 0xf9c0)))
                    mstore(add(transcript, 0xfac0), mload(add(transcript, 0xf9e0)))
mstore(add(transcript, 0xfae0), mload(add(transcript, 0xfa40)))
                    mstore(add(transcript, 0xfb00), mload(add(transcript, 0xfa60)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0xfaa0), 0x80, add(transcript, 0xfaa0), 0x40), 1), success)
mstore(add(transcript, 0xfb20), mload(add(transcript, 0x1c0)))
                    mstore(add(transcript, 0xfb40), mload(add(transcript, 0x1e0)))
mstore(add(transcript, 0xfb60), mload(add(transcript, 0xa8a0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0xfb20), 0x60, add(transcript, 0xfb20), 0x40), 1), success)
mstore(add(transcript, 0xfb80), mload(add(transcript, 0xfaa0)))
                    mstore(add(transcript, 0xfba0), mload(add(transcript, 0xfac0)))
mstore(add(transcript, 0xfbc0), mload(add(transcript, 0xfb20)))
                    mstore(add(transcript, 0xfbe0), mload(add(transcript, 0xfb40)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0xfb80), 0x80, add(transcript, 0xfb80), 0x40), 1), success)
mstore(add(transcript, 0xfc00), mload(add(transcript, 0x200)))
                    mstore(add(transcript, 0xfc20), mload(add(transcript, 0x220)))
mstore(add(transcript, 0xfc40), mload(add(transcript, 0xa8c0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0xfc00), 0x60, add(transcript, 0xfc00), 0x40), 1), success)
mstore(add(transcript, 0xfc60), mload(add(transcript, 0xfb80)))
                    mstore(add(transcript, 0xfc80), mload(add(transcript, 0xfba0)))
mstore(add(transcript, 0xfca0), mload(add(transcript, 0xfc00)))
                    mstore(add(transcript, 0xfcc0), mload(add(transcript, 0xfc20)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0xfc60), 0x80, add(transcript, 0xfc60), 0x40), 1), success)
mstore(add(transcript, 0xfce0), mload(add(transcript, 0x240)))
                    mstore(add(transcript, 0xfd00), mload(add(transcript, 0x260)))
mstore(add(transcript, 0xfd20), mload(add(transcript, 0xa8e0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0xfce0), 0x60, add(transcript, 0xfce0), 0x40), 1), success)
mstore(add(transcript, 0xfd40), mload(add(transcript, 0xfc60)))
                    mstore(add(transcript, 0xfd60), mload(add(transcript, 0xfc80)))
mstore(add(transcript, 0xfd80), mload(add(transcript, 0xfce0)))
                    mstore(add(transcript, 0xfda0), mload(add(transcript, 0xfd00)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0xfd40), 0x80, add(transcript, 0xfd40), 0x40), 1), success)
mstore(add(transcript, 0xfdc0), mload(add(transcript, 0x300)))
                    mstore(add(transcript, 0xfde0), mload(add(transcript, 0x320)))
mstore(add(transcript, 0xfe00), mload(add(transcript, 0xb320)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0xfdc0), 0x60, add(transcript, 0xfdc0), 0x40), 1), success)
mstore(add(transcript, 0xfe20), mload(add(transcript, 0xfd40)))
                    mstore(add(transcript, 0xfe40), mload(add(transcript, 0xfd60)))
mstore(add(transcript, 0xfe60), mload(add(transcript, 0xfdc0)))
                    mstore(add(transcript, 0xfe80), mload(add(transcript, 0xfde0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0xfe20), 0x80, add(transcript, 0xfe20), 0x40), 1), success)
mstore(add(transcript, 0xfea0), mload(add(transcript, 0x340)))
                    mstore(add(transcript, 0xfec0), mload(add(transcript, 0x360)))
mstore(add(transcript, 0xfee0), mload(add(transcript, 0xb340)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0xfea0), 0x60, add(transcript, 0xfea0), 0x40), 1), success)
mstore(add(transcript, 0xff00), mload(add(transcript, 0xfe20)))
                    mstore(add(transcript, 0xff20), mload(add(transcript, 0xfe40)))
mstore(add(transcript, 0xff40), mload(add(transcript, 0xfea0)))
                    mstore(add(transcript, 0xff60), mload(add(transcript, 0xfec0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0xff00), 0x80, add(transcript, 0xff00), 0x40), 1), success)
mstore(add(transcript, 0xff80), mload(add(transcript, 0x380)))
                    mstore(add(transcript, 0xffa0), mload(add(transcript, 0x3a0)))
mstore(add(transcript, 0xffc0), mload(add(transcript, 0xb360)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0xff80), 0x60, add(transcript, 0xff80), 0x40), 1), success)
mstore(add(transcript, 0xffe0), mload(add(transcript, 0xff00)))
                    mstore(add(transcript, 0x10000), mload(add(transcript, 0xff20)))
mstore(add(transcript, 0x10020), mload(add(transcript, 0xff80)))
                    mstore(add(transcript, 0x10040), mload(add(transcript, 0xffa0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0xffe0), 0x80, add(transcript, 0xffe0), 0x40), 1), success)
mstore(add(transcript, 0x10060), mload(add(transcript, 0x540)))
                    mstore(add(transcript, 0x10080), mload(add(transcript, 0x560)))
mstore(add(transcript, 0x100a0), mload(add(transcript, 0xb380)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x10060), 0x60, add(transcript, 0x10060), 0x40), 1), success)
mstore(add(transcript, 0x100c0), mload(add(transcript, 0xffe0)))
                    mstore(add(transcript, 0x100e0), mload(add(transcript, 0x10000)))
mstore(add(transcript, 0x10100), mload(add(transcript, 0x10060)))
                    mstore(add(transcript, 0x10120), mload(add(transcript, 0x10080)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x100c0), 0x80, add(transcript, 0x100c0), 0x40), 1), success)
mstore(add(transcript, 0x10140), mload(add(transcript, 0x580)))
                    mstore(add(transcript, 0x10160), mload(add(transcript, 0x5a0)))
mstore(add(transcript, 0x10180), mload(add(transcript, 0xb3a0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x10140), 0x60, add(transcript, 0x10140), 0x40), 1), success)
mstore(add(transcript, 0x101a0), mload(add(transcript, 0x100c0)))
                    mstore(add(transcript, 0x101c0), mload(add(transcript, 0x100e0)))
mstore(add(transcript, 0x101e0), mload(add(transcript, 0x10140)))
                    mstore(add(transcript, 0x10200), mload(add(transcript, 0x10160)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x101a0), 0x80, add(transcript, 0x101a0), 0x40), 1), success)
mstore(add(transcript, 0x10220), mload(add(transcript, 0x5c0)))
                    mstore(add(transcript, 0x10240), mload(add(transcript, 0x5e0)))
mstore(add(transcript, 0x10260), mload(add(transcript, 0xb3c0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x10220), 0x60, add(transcript, 0x10220), 0x40), 1), success)
mstore(add(transcript, 0x10280), mload(add(transcript, 0x101a0)))
                    mstore(add(transcript, 0x102a0), mload(add(transcript, 0x101c0)))
mstore(add(transcript, 0x102c0), mload(add(transcript, 0x10220)))
                    mstore(add(transcript, 0x102e0), mload(add(transcript, 0x10240)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x10280), 0x80, add(transcript, 0x10280), 0x40), 1), success)
mstore(add(transcript, 0x10300), mload(add(transcript, 0xce0)))
                    mstore(add(transcript, 0x10320), mload(add(transcript, 0xd00)))
mstore(add(transcript, 0x10340), mload(add(transcript, 0xb3e0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x10300), 0x60, add(transcript, 0x10300), 0x40), 1), success)
mstore(add(transcript, 0x10360), mload(add(transcript, 0x10280)))
                    mstore(add(transcript, 0x10380), mload(add(transcript, 0x102a0)))
mstore(add(transcript, 0x103a0), mload(add(transcript, 0x10300)))
                    mstore(add(transcript, 0x103c0), mload(add(transcript, 0x10320)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x10360), 0x80, add(transcript, 0x10360), 0x40), 1), success)
mstore(add(transcript, 0x103e0), mload(add(transcript, 0xd20)))
                    mstore(add(transcript, 0x10400), mload(add(transcript, 0xd40)))
mstore(add(transcript, 0x10420), mload(add(transcript, 0xb400)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x103e0), 0x60, add(transcript, 0x103e0), 0x40), 1), success)
mstore(add(transcript, 0x10440), mload(add(transcript, 0x10360)))
                    mstore(add(transcript, 0x10460), mload(add(transcript, 0x10380)))
mstore(add(transcript, 0x10480), mload(add(transcript, 0x103e0)))
                    mstore(add(transcript, 0x104a0), mload(add(transcript, 0x10400)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x10440), 0x80, add(transcript, 0x10440), 0x40), 1), success)
mstore(add(transcript, 0x104c0), mload(add(transcript, 0xd60)))
                    mstore(add(transcript, 0x104e0), mload(add(transcript, 0xd80)))
mstore(add(transcript, 0x10500), mload(add(transcript, 0xb420)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x104c0), 0x60, add(transcript, 0x104c0), 0x40), 1), success)
mstore(add(transcript, 0x10520), mload(add(transcript, 0x10440)))
                    mstore(add(transcript, 0x10540), mload(add(transcript, 0x10460)))
mstore(add(transcript, 0x10560), mload(add(transcript, 0x104c0)))
                    mstore(add(transcript, 0x10580), mload(add(transcript, 0x104e0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x10520), 0x80, add(transcript, 0x10520), 0x40), 1), success)
mstore(add(transcript, 0x105a0), mload(add(transcript, 0xda0)))
                    mstore(add(transcript, 0x105c0), mload(add(transcript, 0xdc0)))
mstore(add(transcript, 0x105e0), mload(add(transcript, 0xb440)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x105a0), 0x60, add(transcript, 0x105a0), 0x40), 1), success)
mstore(add(transcript, 0x10600), mload(add(transcript, 0x10520)))
                    mstore(add(transcript, 0x10620), mload(add(transcript, 0x10540)))
mstore(add(transcript, 0x10640), mload(add(transcript, 0x105a0)))
                    mstore(add(transcript, 0x10660), mload(add(transcript, 0x105c0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x10600), 0x80, add(transcript, 0x10600), 0x40), 1), success)
mstore(add(transcript, 0x10680), mload(add(transcript, 0xde0)))
                    mstore(add(transcript, 0x106a0), mload(add(transcript, 0xe00)))
mstore(add(transcript, 0x106c0), mload(add(transcript, 0xb460)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x10680), 0x60, add(transcript, 0x10680), 0x40), 1), success)
mstore(add(transcript, 0x106e0), mload(add(transcript, 0x10600)))
                    mstore(add(transcript, 0x10700), mload(add(transcript, 0x10620)))
mstore(add(transcript, 0x10720), mload(add(transcript, 0x10680)))
                    mstore(add(transcript, 0x10740), mload(add(transcript, 0x106a0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x106e0), 0x80, add(transcript, 0x106e0), 0x40), 1), success)
mstore(add(transcript, 0x10760), mload(add(transcript, 0xe20)))
                    mstore(add(transcript, 0x10780), mload(add(transcript, 0xe40)))
mstore(add(transcript, 0x107a0), mload(add(transcript, 0xb480)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x10760), 0x60, add(transcript, 0x10760), 0x40), 1), success)
mstore(add(transcript, 0x107c0), mload(add(transcript, 0x106e0)))
                    mstore(add(transcript, 0x107e0), mload(add(transcript, 0x10700)))
mstore(add(transcript, 0x10800), mload(add(transcript, 0x10760)))
                    mstore(add(transcript, 0x10820), mload(add(transcript, 0x10780)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x107c0), 0x80, add(transcript, 0x107c0), 0x40), 1), success)
mstore(add(transcript, 0x10840), mload(add(transcript, 0xe60)))
                    mstore(add(transcript, 0x10860), mload(add(transcript, 0xe80)))
mstore(add(transcript, 0x10880), mload(add(transcript, 0xb4a0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x10840), 0x60, add(transcript, 0x10840), 0x40), 1), success)
mstore(add(transcript, 0x108a0), mload(add(transcript, 0x107c0)))
                    mstore(add(transcript, 0x108c0), mload(add(transcript, 0x107e0)))
mstore(add(transcript, 0x108e0), mload(add(transcript, 0x10840)))
                    mstore(add(transcript, 0x10900), mload(add(transcript, 0x10860)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x108a0), 0x80, add(transcript, 0x108a0), 0x40), 1), success)
mstore(add(transcript, 0x10920), mload(add(transcript, 0xea0)))
                    mstore(add(transcript, 0x10940), mload(add(transcript, 0xec0)))
mstore(add(transcript, 0x10960), mload(add(transcript, 0xb4c0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x10920), 0x60, add(transcript, 0x10920), 0x40), 1), success)
mstore(add(transcript, 0x10980), mload(add(transcript, 0x108a0)))
                    mstore(add(transcript, 0x109a0), mload(add(transcript, 0x108c0)))
mstore(add(transcript, 0x109c0), mload(add(transcript, 0x10920)))
                    mstore(add(transcript, 0x109e0), mload(add(transcript, 0x10940)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x10980), 0x80, add(transcript, 0x10980), 0x40), 1), success)
mstore(add(transcript, 0x10a00), mload(add(transcript, 0xee0)))
                    mstore(add(transcript, 0x10a20), mload(add(transcript, 0xf00)))
mstore(add(transcript, 0x10a40), mload(add(transcript, 0xb4e0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x10a00), 0x60, add(transcript, 0x10a00), 0x40), 1), success)
mstore(add(transcript, 0x10a60), mload(add(transcript, 0x10980)))
                    mstore(add(transcript, 0x10a80), mload(add(transcript, 0x109a0)))
mstore(add(transcript, 0x10aa0), mload(add(transcript, 0x10a00)))
                    mstore(add(transcript, 0x10ac0), mload(add(transcript, 0x10a20)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x10a60), 0x80, add(transcript, 0x10a60), 0x40), 1), success)
mstore(add(transcript, 0x10ae0), mload(add(transcript, 0xf20)))
                    mstore(add(transcript, 0x10b00), mload(add(transcript, 0xf40)))
mstore(add(transcript, 0x10b20), mload(add(transcript, 0xb500)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x10ae0), 0x60, add(transcript, 0x10ae0), 0x40), 1), success)
mstore(add(transcript, 0x10b40), mload(add(transcript, 0x10a60)))
                    mstore(add(transcript, 0x10b60), mload(add(transcript, 0x10a80)))
mstore(add(transcript, 0x10b80), mload(add(transcript, 0x10ae0)))
                    mstore(add(transcript, 0x10ba0), mload(add(transcript, 0x10b00)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x10b40), 0x80, add(transcript, 0x10b40), 0x40), 1), success)
mstore(add(transcript, 0x10bc0), mload(add(transcript, 0x3c0)))
                    mstore(add(transcript, 0x10be0), mload(add(transcript, 0x3e0)))
mstore(add(transcript, 0x10c00), mload(add(transcript, 0xe1a0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x10bc0), 0x60, add(transcript, 0x10bc0), 0x40), 1), success)
mstore(add(transcript, 0x10c20), mload(add(transcript, 0x10b40)))
                    mstore(add(transcript, 0x10c40), mload(add(transcript, 0x10b60)))
mstore(add(transcript, 0x10c60), mload(add(transcript, 0x10bc0)))
                    mstore(add(transcript, 0x10c80), mload(add(transcript, 0x10be0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x10c20), 0x80, add(transcript, 0x10c20), 0x40), 1), success)
mstore(add(transcript, 0x10ca0), mload(add(transcript, 0x400)))
                    mstore(add(transcript, 0x10cc0), mload(add(transcript, 0x420)))
mstore(add(transcript, 0x10ce0), mload(add(transcript, 0xe1c0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x10ca0), 0x60, add(transcript, 0x10ca0), 0x40), 1), success)
mstore(add(transcript, 0x10d00), mload(add(transcript, 0x10c20)))
                    mstore(add(transcript, 0x10d20), mload(add(transcript, 0x10c40)))
mstore(add(transcript, 0x10d40), mload(add(transcript, 0x10ca0)))
                    mstore(add(transcript, 0x10d60), mload(add(transcript, 0x10cc0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x10d00), 0x80, add(transcript, 0x10d00), 0x40), 1), success)
mstore(add(transcript, 0x10d80), mload(add(transcript, 0x440)))
                    mstore(add(transcript, 0x10da0), mload(add(transcript, 0x460)))
mstore(add(transcript, 0x10dc0), mload(add(transcript, 0xe1e0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x10d80), 0x60, add(transcript, 0x10d80), 0x40), 1), success)
mstore(add(transcript, 0x10de0), mload(add(transcript, 0x10d00)))
                    mstore(add(transcript, 0x10e00), mload(add(transcript, 0x10d20)))
mstore(add(transcript, 0x10e20), mload(add(transcript, 0x10d80)))
                    mstore(add(transcript, 0x10e40), mload(add(transcript, 0x10da0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x10de0), 0x80, add(transcript, 0x10de0), 0x40), 1), success)
mstore(add(transcript, 0x10e60), mload(add(transcript, 0x480)))
                    mstore(add(transcript, 0x10e80), mload(add(transcript, 0x4a0)))
mstore(add(transcript, 0x10ea0), mload(add(transcript, 0xe200)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x10e60), 0x60, add(transcript, 0x10e60), 0x40), 1), success)
mstore(add(transcript, 0x10ec0), mload(add(transcript, 0x10de0)))
                    mstore(add(transcript, 0x10ee0), mload(add(transcript, 0x10e00)))
mstore(add(transcript, 0x10f00), mload(add(transcript, 0x10e60)))
                    mstore(add(transcript, 0x10f20), mload(add(transcript, 0x10e80)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x10ec0), 0x80, add(transcript, 0x10ec0), 0x40), 1), success)
mstore(add(transcript, 0x10f40), mload(add(transcript, 0x4c0)))
                    mstore(add(transcript, 0x10f60), mload(add(transcript, 0x4e0)))
mstore(add(transcript, 0x10f80), mload(add(transcript, 0xe220)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x10f40), 0x60, add(transcript, 0x10f40), 0x40), 1), success)
mstore(add(transcript, 0x10fa0), mload(add(transcript, 0x10ec0)))
                    mstore(add(transcript, 0x10fc0), mload(add(transcript, 0x10ee0)))
mstore(add(transcript, 0x10fe0), mload(add(transcript, 0x10f40)))
                    mstore(add(transcript, 0x11000), mload(add(transcript, 0x10f60)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x10fa0), 0x80, add(transcript, 0x10fa0), 0x40), 1), success)
mstore(add(transcript, 0x11020), mload(add(transcript, 0x500)))
                    mstore(add(transcript, 0x11040), mload(add(transcript, 0x520)))
mstore(add(transcript, 0x11060), mload(add(transcript, 0xe240)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x11020), 0x60, add(transcript, 0x11020), 0x40), 1), success)
mstore(add(transcript, 0x11080), mload(add(transcript, 0x10fa0)))
                    mstore(add(transcript, 0x110a0), mload(add(transcript, 0x10fc0)))
mstore(add(transcript, 0x110c0), mload(add(transcript, 0x11020)))
                    mstore(add(transcript, 0x110e0), mload(add(transcript, 0x11040)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x11080), 0x80, add(transcript, 0x11080), 0x40), 1), success)
mstore(add(transcript, 0x11100), mload(add(transcript, 0x280)))
                    mstore(add(transcript, 0x11120), mload(add(transcript, 0x2a0)))
mstore(add(transcript, 0x11140), mload(add(transcript, 0xe260)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x11100), 0x60, add(transcript, 0x11100), 0x40), 1), success)
mstore(add(transcript, 0x11160), mload(add(transcript, 0x11080)))
                    mstore(add(transcript, 0x11180), mload(add(transcript, 0x110a0)))
mstore(add(transcript, 0x111a0), mload(add(transcript, 0x11100)))
                    mstore(add(transcript, 0x111c0), mload(add(transcript, 0x11120)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x11160), 0x80, add(transcript, 0x11160), 0x40), 1), success)
mstore(add(transcript, 0x111e0), mload(add(transcript, 0x6a0)))
                    mstore(add(transcript, 0x11200), mload(add(transcript, 0x6c0)))
mstore(add(transcript, 0x11220), mload(add(transcript, 0xe280)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x111e0), 0x60, add(transcript, 0x111e0), 0x40), 1), success)
mstore(add(transcript, 0x11240), mload(add(transcript, 0x11160)))
                    mstore(add(transcript, 0x11260), mload(add(transcript, 0x11180)))
mstore(add(transcript, 0x11280), mload(add(transcript, 0x111e0)))
                    mstore(add(transcript, 0x112a0), mload(add(transcript, 0x11200)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x11240), 0x80, add(transcript, 0x11240), 0x40), 1), success)
mstore(add(transcript, 0x112c0), mload(add(transcript, 0x720)))
                    mstore(add(transcript, 0x112e0), mload(add(transcript, 0x740)))
mstore(add(transcript, 0x11300), mload(add(transcript, 0xe2a0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x112c0), 0x60, add(transcript, 0x112c0), 0x40), 1), success)
mstore(add(transcript, 0x11320), mload(add(transcript, 0x11240)))
                    mstore(add(transcript, 0x11340), mload(add(transcript, 0x11260)))
mstore(add(transcript, 0x11360), mload(add(transcript, 0x112c0)))
                    mstore(add(transcript, 0x11380), mload(add(transcript, 0x112e0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x11320), 0x80, add(transcript, 0x11320), 0x40), 1), success)
mstore(add(transcript, 0x113a0), mload(add(transcript, 0x7a0)))
                    mstore(add(transcript, 0x113c0), mload(add(transcript, 0x7c0)))
mstore(add(transcript, 0x113e0), mload(add(transcript, 0xe2c0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x113a0), 0x60, add(transcript, 0x113a0), 0x40), 1), success)
mstore(add(transcript, 0x11400), mload(add(transcript, 0x11320)))
                    mstore(add(transcript, 0x11420), mload(add(transcript, 0x11340)))
mstore(add(transcript, 0x11440), mload(add(transcript, 0x113a0)))
                    mstore(add(transcript, 0x11460), mload(add(transcript, 0x113c0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x11400), 0x80, add(transcript, 0x11400), 0x40), 1), success)
mstore(add(transcript, 0x11480), mload(add(transcript, 0x820)))
                    mstore(add(transcript, 0x114a0), mload(add(transcript, 0x840)))
mstore(add(transcript, 0x114c0), mload(add(transcript, 0xe2e0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x11480), 0x60, add(transcript, 0x11480), 0x40), 1), success)
mstore(add(transcript, 0x114e0), mload(add(transcript, 0x11400)))
                    mstore(add(transcript, 0x11500), mload(add(transcript, 0x11420)))
mstore(add(transcript, 0x11520), mload(add(transcript, 0x11480)))
                    mstore(add(transcript, 0x11540), mload(add(transcript, 0x114a0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x114e0), 0x80, add(transcript, 0x114e0), 0x40), 1), success)
mstore(add(transcript, 0x11560), mload(add(transcript, 0x8a0)))
                    mstore(add(transcript, 0x11580), mload(add(transcript, 0x8c0)))
mstore(add(transcript, 0x115a0), mload(add(transcript, 0xe300)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x11560), 0x60, add(transcript, 0x11560), 0x40), 1), success)
mstore(add(transcript, 0x115c0), mload(add(transcript, 0x114e0)))
                    mstore(add(transcript, 0x115e0), mload(add(transcript, 0x11500)))
mstore(add(transcript, 0x11600), mload(add(transcript, 0x11560)))
                    mstore(add(transcript, 0x11620), mload(add(transcript, 0x11580)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x115c0), 0x80, add(transcript, 0x115c0), 0x40), 1), success)
mstore(add(transcript, 0x11640), mload(add(transcript, 0x920)))
                    mstore(add(transcript, 0x11660), mload(add(transcript, 0x940)))
mstore(add(transcript, 0x11680), mload(add(transcript, 0xe320)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x11640), 0x60, add(transcript, 0x11640), 0x40), 1), success)
mstore(add(transcript, 0x116a0), mload(add(transcript, 0x115c0)))
                    mstore(add(transcript, 0x116c0), mload(add(transcript, 0x115e0)))
mstore(add(transcript, 0x116e0), mload(add(transcript, 0x11640)))
                    mstore(add(transcript, 0x11700), mload(add(transcript, 0x11660)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x116a0), 0x80, add(transcript, 0x116a0), 0x40), 1), success)
mstore(add(transcript, 0x11720), mload(add(transcript, 0x9a0)))
                    mstore(add(transcript, 0x11740), mload(add(transcript, 0x9c0)))
mstore(add(transcript, 0x11760), mload(add(transcript, 0xe340)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x11720), 0x60, add(transcript, 0x11720), 0x40), 1), success)
mstore(add(transcript, 0x11780), mload(add(transcript, 0x116a0)))
                    mstore(add(transcript, 0x117a0), mload(add(transcript, 0x116c0)))
mstore(add(transcript, 0x117c0), mload(add(transcript, 0x11720)))
                    mstore(add(transcript, 0x117e0), mload(add(transcript, 0x11740)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x11780), 0x80, add(transcript, 0x11780), 0x40), 1), success)
mstore(add(transcript, 0x11800), mload(add(transcript, 0xa20)))
                    mstore(add(transcript, 0x11820), mload(add(transcript, 0xa40)))
mstore(add(transcript, 0x11840), mload(add(transcript, 0xe360)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x11800), 0x60, add(transcript, 0x11800), 0x40), 1), success)
mstore(add(transcript, 0x11860), mload(add(transcript, 0x11780)))
                    mstore(add(transcript, 0x11880), mload(add(transcript, 0x117a0)))
mstore(add(transcript, 0x118a0), mload(add(transcript, 0x11800)))
                    mstore(add(transcript, 0x118c0), mload(add(transcript, 0x11820)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x11860), 0x80, add(transcript, 0x11860), 0x40), 1), success)
mstore(add(transcript, 0x118e0), mload(add(transcript, 0xaa0)))
                    mstore(add(transcript, 0x11900), mload(add(transcript, 0xac0)))
mstore(add(transcript, 0x11920), mload(add(transcript, 0xe380)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x118e0), 0x60, add(transcript, 0x118e0), 0x40), 1), success)
mstore(add(transcript, 0x11940), mload(add(transcript, 0x11860)))
                    mstore(add(transcript, 0x11960), mload(add(transcript, 0x11880)))
mstore(add(transcript, 0x11980), mload(add(transcript, 0x118e0)))
                    mstore(add(transcript, 0x119a0), mload(add(transcript, 0x11900)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x11940), 0x80, add(transcript, 0x11940), 0x40), 1), success)
mstore(add(transcript, 0x119c0), 0x276a0c6743f59f263c76c56844bd522c6da3636b4e547a4c53fa36dfb584b286)
                    mstore(add(transcript, 0x119e0), 0x0f112b21da415489e3ee755650160cd652d0eef4e0242b9dc60761114a1056c0)
mstore(add(transcript, 0x11a00), mload(add(transcript, 0xe3a0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x119c0), 0x60, add(transcript, 0x119c0), 0x40), 1), success)
mstore(add(transcript, 0x11a20), mload(add(transcript, 0x11940)))
                    mstore(add(transcript, 0x11a40), mload(add(transcript, 0x11960)))
mstore(add(transcript, 0x11a60), mload(add(transcript, 0x119c0)))
                    mstore(add(transcript, 0x11a80), mload(add(transcript, 0x119e0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x11a20), 0x80, add(transcript, 0x11a20), 0x40), 1), success)
mstore(add(transcript, 0x11aa0), 0x2b2aa4401c97cb106f86789c3f4822480edeca1a643d15734451da2d20bc13ec)
                    mstore(add(transcript, 0x11ac0), 0x290c39cd86b70840507b0aa521fe7e207dc1cf1935d773b2af556e51fe697f4a)
mstore(add(transcript, 0x11ae0), mload(add(transcript, 0xe3c0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x11aa0), 0x60, add(transcript, 0x11aa0), 0x40), 1), success)
mstore(add(transcript, 0x11b00), mload(add(transcript, 0x11a20)))
                    mstore(add(transcript, 0x11b20), mload(add(transcript, 0x11a40)))
mstore(add(transcript, 0x11b40), mload(add(transcript, 0x11aa0)))
                    mstore(add(transcript, 0x11b60), mload(add(transcript, 0x11ac0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x11b00), 0x80, add(transcript, 0x11b00), 0x40), 1), success)
mstore(add(transcript, 0x11b80), 0x23cdf66e4a9d6f3daa95fd76145d08e2a69f1107040d4fcf60f5ca183a8139f6)
                    mstore(add(transcript, 0x11ba0), 0x0dc2f2ab096680576d4f834391bfeaf4e4e58c9b1cff8cc874d023cb28f7987b)
mstore(add(transcript, 0x11bc0), mload(add(transcript, 0xe3e0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x11b80), 0x60, add(transcript, 0x11b80), 0x40), 1), success)
mstore(add(transcript, 0x11be0), mload(add(transcript, 0x11b00)))
                    mstore(add(transcript, 0x11c00), mload(add(transcript, 0x11b20)))
mstore(add(transcript, 0x11c20), mload(add(transcript, 0x11b80)))
                    mstore(add(transcript, 0x11c40), mload(add(transcript, 0x11ba0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x11be0), 0x80, add(transcript, 0x11be0), 0x40), 1), success)
mstore(add(transcript, 0x11c60), 0x2901f83a7fd36ffa2d83dd926e6efa334a199f18d22ea4b7ffbb3ca5c4040adc)
                    mstore(add(transcript, 0x11c80), 0x0ae35a5c73fc19dc5a136c2882189fd28572c6461796042047aa58fb8a79bc20)
mstore(add(transcript, 0x11ca0), mload(add(transcript, 0xe400)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x11c60), 0x60, add(transcript, 0x11c60), 0x40), 1), success)
mstore(add(transcript, 0x11cc0), mload(add(transcript, 0x11be0)))
                    mstore(add(transcript, 0x11ce0), mload(add(transcript, 0x11c00)))
mstore(add(transcript, 0x11d00), mload(add(transcript, 0x11c60)))
                    mstore(add(transcript, 0x11d20), mload(add(transcript, 0x11c80)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x11cc0), 0x80, add(transcript, 0x11cc0), 0x40), 1), success)
mstore(add(transcript, 0x11d40), 0x269d41f67dcfe8e8548a0541aa5c6d7815423f308cb169c983b6a64302ac01e6)
                    mstore(add(transcript, 0x11d60), 0x037522e98c74380a2a6f523e1be56d25698e2f782b19afcd99bdbaa6753951a4)
mstore(add(transcript, 0x11d80), mload(add(transcript, 0xe420)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x11d40), 0x60, add(transcript, 0x11d40), 0x40), 1), success)
mstore(add(transcript, 0x11da0), mload(add(transcript, 0x11cc0)))
                    mstore(add(transcript, 0x11dc0), mload(add(transcript, 0x11ce0)))
mstore(add(transcript, 0x11de0), mload(add(transcript, 0x11d40)))
                    mstore(add(transcript, 0x11e00), mload(add(transcript, 0x11d60)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x11da0), 0x80, add(transcript, 0x11da0), 0x40), 1), success)
mstore(add(transcript, 0x11e20), 0x127cdd85da4f067bf1806b2010cbccaea011b04975f99cbaaaa7538029dc9218)
                    mstore(add(transcript, 0x11e40), 0x1f947857256354e3ba5a8f5346cba87d80b52646bd7b2cbbfd258fb20a7712e7)
mstore(add(transcript, 0x11e60), mload(add(transcript, 0xe440)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x11e20), 0x60, add(transcript, 0x11e20), 0x40), 1), success)
mstore(add(transcript, 0x11e80), mload(add(transcript, 0x11da0)))
                    mstore(add(transcript, 0x11ea0), mload(add(transcript, 0x11dc0)))
mstore(add(transcript, 0x11ec0), mload(add(transcript, 0x11e20)))
                    mstore(add(transcript, 0x11ee0), mload(add(transcript, 0x11e40)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x11e80), 0x80, add(transcript, 0x11e80), 0x40), 1), success)
mstore(add(transcript, 0x11f00), 0x1b9fc8985b2716e5153707e60129cf093b8f1e20d32e765f27f7b99e8a553a65)
                    mstore(add(transcript, 0x11f20), 0x253dc7ca45c7ab67d99c89558e026cad66df56de866c1aa1ec15d273f4e8d143)
mstore(add(transcript, 0x11f40), mload(add(transcript, 0xe460)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x11f00), 0x60, add(transcript, 0x11f00), 0x40), 1), success)
mstore(add(transcript, 0x11f60), mload(add(transcript, 0x11e80)))
                    mstore(add(transcript, 0x11f80), mload(add(transcript, 0x11ea0)))
mstore(add(transcript, 0x11fa0), mload(add(transcript, 0x11f00)))
                    mstore(add(transcript, 0x11fc0), mload(add(transcript, 0x11f20)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x11f60), 0x80, add(transcript, 0x11f60), 0x40), 1), success)
mstore(add(transcript, 0x11fe0), 0x1df717bf0f18dc1087d7cf4ec5d0e42ff6730ee0bbbdba6a211745f7ede5e401)
                    mstore(add(transcript, 0x12000), 0x0c27edb945fd37093770edea508de55522e7d604b616818827b577e3e2131824)
mstore(add(transcript, 0x12020), mload(add(transcript, 0xe480)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x11fe0), 0x60, add(transcript, 0x11fe0), 0x40), 1), success)
mstore(add(transcript, 0x12040), mload(add(transcript, 0x11f60)))
                    mstore(add(transcript, 0x12060), mload(add(transcript, 0x11f80)))
mstore(add(transcript, 0x12080), mload(add(transcript, 0x11fe0)))
                    mstore(add(transcript, 0x120a0), mload(add(transcript, 0x12000)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x12040), 0x80, add(transcript, 0x12040), 0x40), 1), success)
mstore(add(transcript, 0x120c0), 0x2690e84c0a0fb4bf13395d50720511a33ab802f53e0aeb7165505886b394b34e)
                    mstore(add(transcript, 0x120e0), 0x205ebe1546592aa773c3f6f8cfa421d8f921d966e2d78855edeb0386be083b86)
mstore(add(transcript, 0x12100), mload(add(transcript, 0xe4a0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x120c0), 0x60, add(transcript, 0x120c0), 0x40), 1), success)
mstore(add(transcript, 0x12120), mload(add(transcript, 0x12040)))
                    mstore(add(transcript, 0x12140), mload(add(transcript, 0x12060)))
mstore(add(transcript, 0x12160), mload(add(transcript, 0x120c0)))
                    mstore(add(transcript, 0x12180), mload(add(transcript, 0x120e0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x12120), 0x80, add(transcript, 0x12120), 0x40), 1), success)
mstore(add(transcript, 0x121a0), 0x1cc10bc417d7664907d09c41e637e414ba0b7b3549be6f600062585b85712a0a)
                    mstore(add(transcript, 0x121c0), 0x0d0b0f7090ce3c0e8093cc507d2e9570b34b56109af02ffae473f743a2eb0e9c)
mstore(add(transcript, 0x121e0), mload(add(transcript, 0xe4c0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x121a0), 0x60, add(transcript, 0x121a0), 0x40), 1), success)
mstore(add(transcript, 0x12200), mload(add(transcript, 0x12120)))
                    mstore(add(transcript, 0x12220), mload(add(transcript, 0x12140)))
mstore(add(transcript, 0x12240), mload(add(transcript, 0x121a0)))
                    mstore(add(transcript, 0x12260), mload(add(transcript, 0x121c0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x12200), 0x80, add(transcript, 0x12200), 0x40), 1), success)
mstore(add(transcript, 0x12280), 0x237e2180c362c96f8e9454fbc327adf99755831bfbeea5e0b1766a1711430a2e)
                    mstore(add(transcript, 0x122a0), 0x2174aa1c38c4a01d5afd5c2340fadf161e776922a10694a4b085cf8c18fd5fd3)
mstore(add(transcript, 0x122c0), mload(add(transcript, 0xe4e0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x12280), 0x60, add(transcript, 0x12280), 0x40), 1), success)
mstore(add(transcript, 0x122e0), mload(add(transcript, 0x12200)))
                    mstore(add(transcript, 0x12300), mload(add(transcript, 0x12220)))
mstore(add(transcript, 0x12320), mload(add(transcript, 0x12280)))
                    mstore(add(transcript, 0x12340), mload(add(transcript, 0x122a0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x122e0), 0x80, add(transcript, 0x122e0), 0x40), 1), success)
mstore(add(transcript, 0x12360), 0x1a540f5d8efee43d3f407a60a000374e50cee3bacdad8bd4769a101b847382ce)
                    mstore(add(transcript, 0x12380), 0x2909f40c95190a7e288834291eadca78836ea5d004fef180be62d3d07528cf1a)
mstore(add(transcript, 0x123a0), mload(add(transcript, 0xe500)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x12360), 0x60, add(transcript, 0x12360), 0x40), 1), success)
mstore(add(transcript, 0x123c0), mload(add(transcript, 0x122e0)))
                    mstore(add(transcript, 0x123e0), mload(add(transcript, 0x12300)))
mstore(add(transcript, 0x12400), mload(add(transcript, 0x12360)))
                    mstore(add(transcript, 0x12420), mload(add(transcript, 0x12380)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x123c0), 0x80, add(transcript, 0x123c0), 0x40), 1), success)
mstore(add(transcript, 0x12440), 0x2d5a8ec22f0fdd496eac388de4259bcb1106c311af0286c089d863391be0c1a5)
                    mstore(add(transcript, 0x12460), 0x1ac440c2194a041631b7e08f1b135039fe7694c1c0f8c092e0c839b78b7941f0)
mstore(add(transcript, 0x12480), mload(add(transcript, 0xe520)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x12440), 0x60, add(transcript, 0x12440), 0x40), 1), success)
mstore(add(transcript, 0x124a0), mload(add(transcript, 0x123c0)))
                    mstore(add(transcript, 0x124c0), mload(add(transcript, 0x123e0)))
mstore(add(transcript, 0x124e0), mload(add(transcript, 0x12440)))
                    mstore(add(transcript, 0x12500), mload(add(transcript, 0x12460)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x124a0), 0x80, add(transcript, 0x124a0), 0x40), 1), success)
mstore(add(transcript, 0x12520), 0x24dd8a4a9846505e831c29c370d6d0d2e4bc033cf3c661f52559e53cf3544fa3)
                    mstore(add(transcript, 0x12540), 0x18e4054e405028ec4a7117e041c206bfe052c7b4094fff72b474104f68a327c9)
mstore(add(transcript, 0x12560), mload(add(transcript, 0xe540)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x12520), 0x60, add(transcript, 0x12520), 0x40), 1), success)
mstore(add(transcript, 0x12580), mload(add(transcript, 0x124a0)))
                    mstore(add(transcript, 0x125a0), mload(add(transcript, 0x124c0)))
mstore(add(transcript, 0x125c0), mload(add(transcript, 0x12520)))
                    mstore(add(transcript, 0x125e0), mload(add(transcript, 0x12540)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x12580), 0x80, add(transcript, 0x12580), 0x40), 1), success)
mstore(add(transcript, 0x12600), 0x2938d7099dcd237c9903b2cb1c296454b720e2cfa7c1f669ee351e8d4cb9936e)
                    mstore(add(transcript, 0x12620), 0x1a62236254445c7a5491e79d499ab89b1a715df2ab756d46525f08fa7625e3ea)
mstore(add(transcript, 0x12640), mload(add(transcript, 0xe560)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x12600), 0x60, add(transcript, 0x12600), 0x40), 1), success)
mstore(add(transcript, 0x12660), mload(add(transcript, 0x12580)))
                    mstore(add(transcript, 0x12680), mload(add(transcript, 0x125a0)))
mstore(add(transcript, 0x126a0), mload(add(transcript, 0x12600)))
                    mstore(add(transcript, 0x126c0), mload(add(transcript, 0x12620)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x12660), 0x80, add(transcript, 0x12660), 0x40), 1), success)
mstore(add(transcript, 0x126e0), 0x03a37fd290b29ffdbd04bd66caa2216920482d6e4d22d67dbe4286969e527c25)
                    mstore(add(transcript, 0x12700), 0x2cfcb4bc521fcb558cd590464eb8bd5f54862c94ab4c3a84ca8c2f643eb50db0)
mstore(add(transcript, 0x12720), mload(add(transcript, 0xe580)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x126e0), 0x60, add(transcript, 0x126e0), 0x40), 1), success)
mstore(add(transcript, 0x12740), mload(add(transcript, 0x12660)))
                    mstore(add(transcript, 0x12760), mload(add(transcript, 0x12680)))
mstore(add(transcript, 0x12780), mload(add(transcript, 0x126e0)))
                    mstore(add(transcript, 0x127a0), mload(add(transcript, 0x12700)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x12740), 0x80, add(transcript, 0x12740), 0x40), 1), success)
mstore(add(transcript, 0x127c0), 0x018c4f42050681215d754bab1179667bbcc5c7455df4c3cd7c521a0721adbdb1)
                    mstore(add(transcript, 0x127e0), 0x0511a6d8ebf9e5e95a4d7cc4d3acac8d34bce5a872c06b576a844cc64b7d3947)
mstore(add(transcript, 0x12800), mload(add(transcript, 0xe5a0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x127c0), 0x60, add(transcript, 0x127c0), 0x40), 1), success)
mstore(add(transcript, 0x12820), mload(add(transcript, 0x12740)))
                    mstore(add(transcript, 0x12840), mload(add(transcript, 0x12760)))
mstore(add(transcript, 0x12860), mload(add(transcript, 0x127c0)))
                    mstore(add(transcript, 0x12880), mload(add(transcript, 0x127e0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x12820), 0x80, add(transcript, 0x12820), 0x40), 1), success)
mstore(add(transcript, 0x128a0), 0x1ecbd5a389cc2be29fbc367bcb05062df8d3a1b62d7b986c54d171cdee5523b1)
                    mstore(add(transcript, 0x128c0), 0x29c2a50307ea107ed84065867c11575e9d9223e5f0fb6adeff0cf6018b8aefcc)
mstore(add(transcript, 0x128e0), mload(add(transcript, 0xe5c0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x128a0), 0x60, add(transcript, 0x128a0), 0x40), 1), success)
mstore(add(transcript, 0x12900), mload(add(transcript, 0x12820)))
                    mstore(add(transcript, 0x12920), mload(add(transcript, 0x12840)))
mstore(add(transcript, 0x12940), mload(add(transcript, 0x128a0)))
                    mstore(add(transcript, 0x12960), mload(add(transcript, 0x128c0)))
success := and(eq(staticcall(gas(), 0x6, add(transcript, 0x12900), 0x80, add(transcript, 0x12900), 0x40), 1), success)
mstore(add(transcript, 0x12980), 0x2af6648225bd404990241f0a948a37ea7d7fd94e5f33bfe7aac503e0e304383e)
                    mstore(add(transcript, 0x129a0), 0x023f5c60005a0d5cde21eff81729ac4c82cd97207c52f04c38d773f4a73a360c)
mstore(add(transcript, 0x129c0), mload(add(transcript, 0xe5e0)))
success := and(eq(staticcall(gas(), 0x7, add(transcript, 0x12980), 0x60, add(transcript, 0x12980), 0x40), 1), success)

        }}
        // transcriptBytes = abi.encode(transcript.length, transcript);
        bytes32[] memory newTranscript = new bytes32[](_transcript.length);
        for(uint i=0; i<_transcript.length; i++) {
            newTranscript[i] = transcript[i];
        }
        return (success, newTranscript);
    } 
}
