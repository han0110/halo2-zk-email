// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;
import "../VerifierFuncAbst.sol";

contract VerifierFunc1 is VerifierFuncAbst {
    function verifyPartial(
        uint256[] memory pubInputs,
        bytes memory proof,
        bool success,
        bytes32[] memory _transcript
    ) public view override returns (bool, bytes32[] memory) {
        bytes32[2776] memory transcript;
        for(uint i=0; i<_transcript.length; i++) {
            transcript[i] = _transcript[i];
        }
        assembly {{
            
            let f_p
            := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
            let
                f_q
            := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
            function validate_ec_point(x, y) -> valid {
                {
                    let x_lt_p := lt(
                        x,
                        0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
                    )
                    let y_lt_p := lt(
                        y,
                        0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
                    )
                    valid := and(x_lt_p, y_lt_p)
                }
                {
                    let x_is_zero := eq(x, 0)
                    let y_is_zero := eq(y, 0)
                    let x_or_y_is_zero := or(x_is_zero, y_is_zero)
                    let x_and_y_is_not_zero := not(x_or_y_is_zero)
                    valid := and(x_and_y_is_not_zero, valid)
                }
                {
                    let y_square := mulmod(
                        y,
                        y,
                        0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
                    )
                    let x_square := mulmod(
                        x,
                        x,
                        0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
                    )
                    let x_cube := mulmod(
                        x_square,
                        x,
                        0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
                    )
                    let x_cube_plus_3 := addmod(
                        x_cube,
                        3,
                        0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
                    )
                    let y_square_eq_x_cube_plus_3 := eq(x_cube_plus_3, y_square)
                    valid := and(y_square_eq_x_cube_plus_3, valid)
                }
            }
    mstore(add(transcript, 0x5140), mulmod(mload(add(transcript, 0x1da0)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x5160), addmod(mload(add(transcript, 0x1660)), mload(add(transcript, 0x5140)), f_q))
mstore(add(transcript, 0x5180), addmod(mload(add(transcript, 0x5160)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x51a0), mulmod(mload(add(transcript, 0x5180)), mload(add(transcript, 0x5120)), f_q))
mstore(add(transcript, 0x51c0), mulmod(mload(add(transcript, 0x51a0)), mload(add(transcript, 0x2000)), f_q))
mstore(add(transcript, 0x51e0), mulmod(2381670505483685611182091218417223919364072893694444758025506701602682587318, mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x5200), mulmod(mload(add(transcript, 0x1160)), mload(add(transcript, 0x51e0)), f_q))
mstore(add(transcript, 0x5220), addmod(mload(add(transcript, 0x1600)), mload(add(transcript, 0x5200)), f_q))
mstore(add(transcript, 0x5240), addmod(mload(add(transcript, 0x5220)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x5260), mulmod(7687930163830757070113631199804839025806810462573557873219800755854393200610, mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x5280), mulmod(mload(add(transcript, 0x1160)), mload(add(transcript, 0x5260)), f_q))
mstore(add(transcript, 0x52a0), addmod(mload(add(transcript, 0x1620)), mload(add(transcript, 0x5280)), f_q))
mstore(add(transcript, 0x52c0), addmod(mload(add(transcript, 0x52a0)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x52e0), mulmod(mload(add(transcript, 0x52c0)), mload(add(transcript, 0x5240)), f_q))
mstore(add(transcript, 0x5300), mulmod(18841374007583180662637314443453732245933177918185782718371124070078050062475, mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x5320), mulmod(mload(add(transcript, 0x1160)), mload(add(transcript, 0x5300)), f_q))
mstore(add(transcript, 0x5340), addmod(mload(add(transcript, 0x1640)), mload(add(transcript, 0x5320)), f_q))
mstore(add(transcript, 0x5360), addmod(mload(add(transcript, 0x5340)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x5380), mulmod(mload(add(transcript, 0x5360)), mload(add(transcript, 0x52e0)), f_q))
mstore(add(transcript, 0x53a0), mulmod(19197752132381552471349846071531569266256022960372343424487157777415058628365, mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x53c0), mulmod(mload(add(transcript, 0x1160)), mload(add(transcript, 0x53a0)), f_q))
mstore(add(transcript, 0x53e0), addmod(mload(add(transcript, 0x1660)), mload(add(transcript, 0x53c0)), f_q))
mstore(add(transcript, 0x5400), addmod(mload(add(transcript, 0x53e0)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x5420), mulmod(mload(add(transcript, 0x5400)), mload(add(transcript, 0x5380)), f_q))
mstore(add(transcript, 0x5440), mulmod(mload(add(transcript, 0x5420)), mload(add(transcript, 0x1fe0)), f_q))
mstore(add(transcript, 0x5460), addmod(mload(add(transcript, 0x51c0)), sub(f_q, mload(add(transcript, 0x5440))), f_q))
mstore(add(transcript, 0x5480), mulmod(mload(add(transcript, 0x5460)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x54a0), addmod(mload(add(transcript, 0x4fc0)), mload(add(transcript, 0x5480)), f_q))
mstore(add(transcript, 0x54c0), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x54a0)), f_q))
mstore(add(transcript, 0x54e0), mulmod(mload(add(transcript, 0x1dc0)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x5500), addmod(mload(add(transcript, 0x1680)), mload(add(transcript, 0x54e0)), f_q))
mstore(add(transcript, 0x5520), addmod(mload(add(transcript, 0x5500)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x5540), mulmod(mload(add(transcript, 0x1de0)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x5560), addmod(mload(add(transcript, 0x16a0)), mload(add(transcript, 0x5540)), f_q))
mstore(add(transcript, 0x5580), addmod(mload(add(transcript, 0x5560)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x55a0), mulmod(mload(add(transcript, 0x5580)), mload(add(transcript, 0x5520)), f_q))
mstore(add(transcript, 0x55c0), mulmod(mload(add(transcript, 0x1e00)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x55e0), addmod(mload(add(transcript, 0x16c0)), mload(add(transcript, 0x55c0)), f_q))
mstore(add(transcript, 0x5600), addmod(mload(add(transcript, 0x55e0)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x5620), mulmod(mload(add(transcript, 0x5600)), mload(add(transcript, 0x55a0)), f_q))
mstore(add(transcript, 0x5640), mulmod(mload(add(transcript, 0x1e20)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x5660), addmod(mload(add(transcript, 0x16e0)), mload(add(transcript, 0x5640)), f_q))
mstore(add(transcript, 0x5680), addmod(mload(add(transcript, 0x5660)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x56a0), mulmod(mload(add(transcript, 0x5680)), mload(add(transcript, 0x5620)), f_q))
mstore(add(transcript, 0x56c0), mulmod(mload(add(transcript, 0x56a0)), mload(add(transcript, 0x2060)), f_q))
mstore(add(transcript, 0x56e0), mulmod(4107547195958811607586128047858595978395981384383810616480821684720783343476, mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x5700), mulmod(mload(add(transcript, 0x1160)), mload(add(transcript, 0x56e0)), f_q))
mstore(add(transcript, 0x5720), addmod(mload(add(transcript, 0x1680)), mload(add(transcript, 0x5700)), f_q))
mstore(add(transcript, 0x5740), addmod(mload(add(transcript, 0x5720)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x5760), mulmod(13564642984573314542683510780499048133657656300857957395232929436066953511694, mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x5780), mulmod(mload(add(transcript, 0x1160)), mload(add(transcript, 0x5760)), f_q))
mstore(add(transcript, 0x57a0), addmod(mload(add(transcript, 0x16a0)), mload(add(transcript, 0x5780)), f_q))
mstore(add(transcript, 0x57c0), addmod(mload(add(transcript, 0x57a0)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x57e0), mulmod(mload(add(transcript, 0x57c0)), mload(add(transcript, 0x5740)), f_q))
mstore(add(transcript, 0x5800), mulmod(13613576618463984615987010477140414706703336142901358713038085451220811690793, mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x5820), mulmod(mload(add(transcript, 0x1160)), mload(add(transcript, 0x5800)), f_q))
mstore(add(transcript, 0x5840), addmod(mload(add(transcript, 0x16c0)), mload(add(transcript, 0x5820)), f_q))
mstore(add(transcript, 0x5860), addmod(mload(add(transcript, 0x5840)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x5880), mulmod(mload(add(transcript, 0x5860)), mload(add(transcript, 0x57e0)), f_q))
mstore(add(transcript, 0x58a0), mulmod(9622370733693466968027131946194818623199083572654659861265818790460803870144, mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x58c0), mulmod(mload(add(transcript, 0x1160)), mload(add(transcript, 0x58a0)), f_q))
mstore(add(transcript, 0x58e0), addmod(mload(add(transcript, 0x16e0)), mload(add(transcript, 0x58c0)), f_q))
mstore(add(transcript, 0x5900), addmod(mload(add(transcript, 0x58e0)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x5920), mulmod(mload(add(transcript, 0x5900)), mload(add(transcript, 0x5880)), f_q))
mstore(add(transcript, 0x5940), mulmod(mload(add(transcript, 0x5920)), mload(add(transcript, 0x2040)), f_q))
mstore(add(transcript, 0x5960), addmod(mload(add(transcript, 0x56c0)), sub(f_q, mload(add(transcript, 0x5940))), f_q))
mstore(add(transcript, 0x5980), mulmod(mload(add(transcript, 0x5960)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x59a0), addmod(mload(add(transcript, 0x54c0)), mload(add(transcript, 0x5980)), f_q))
mstore(add(transcript, 0x59c0), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x59a0)), f_q))
mstore(add(transcript, 0x59e0), mulmod(mload(add(transcript, 0x1e40)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x5a00), addmod(mload(add(transcript, 0x1700)), mload(add(transcript, 0x59e0)), f_q))
mstore(add(transcript, 0x5a20), addmod(mload(add(transcript, 0x5a00)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x5a40), mulmod(mload(add(transcript, 0x1e60)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x5a60), addmod(mload(add(transcript, 0x1720)), mload(add(transcript, 0x5a40)), f_q))
mstore(add(transcript, 0x5a80), addmod(mload(add(transcript, 0x5a60)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x5aa0), mulmod(mload(add(transcript, 0x5a80)), mload(add(transcript, 0x5a20)), f_q))
mstore(add(transcript, 0x5ac0), mulmod(mload(add(transcript, 0x1e80)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x5ae0), addmod(mload(add(transcript, 0x1740)), mload(add(transcript, 0x5ac0)), f_q))
mstore(add(transcript, 0x5b00), addmod(mload(add(transcript, 0x5ae0)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x5b20), mulmod(mload(add(transcript, 0x5b00)), mload(add(transcript, 0x5aa0)), f_q))
mstore(add(transcript, 0x5b40), mulmod(mload(add(transcript, 0x1ea0)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x5b60), addmod(mload(add(transcript, 0x3060)), mload(add(transcript, 0x5b40)), f_q))
mstore(add(transcript, 0x5b80), addmod(mload(add(transcript, 0x5b60)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x5ba0), mulmod(mload(add(transcript, 0x5b80)), mload(add(transcript, 0x5b20)), f_q))
mstore(add(transcript, 0x5bc0), mulmod(mload(add(transcript, 0x5ba0)), mload(add(transcript, 0x20c0)), f_q))
mstore(add(transcript, 0x5be0), mulmod(18626111036309077194167943991502496230251336547212650850189423162939397664427, mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x5c00), mulmod(mload(add(transcript, 0x1160)), mload(add(transcript, 0x5be0)), f_q))
mstore(add(transcript, 0x5c20), addmod(mload(add(transcript, 0x1700)), mload(add(transcript, 0x5c00)), f_q))
mstore(add(transcript, 0x5c40), addmod(mload(add(transcript, 0x5c20)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x5c60), mulmod(18927387919977651356001004808404348904064135541704947183932503905108716786826, mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x5c80), mulmod(mload(add(transcript, 0x1160)), mload(add(transcript, 0x5c60)), f_q))
mstore(add(transcript, 0x5ca0), addmod(mload(add(transcript, 0x1720)), mload(add(transcript, 0x5c80)), f_q))
mstore(add(transcript, 0x5cc0), addmod(mload(add(transcript, 0x5ca0)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x5ce0), mulmod(mload(add(transcript, 0x5cc0)), mload(add(transcript, 0x5c40)), f_q))
mstore(add(transcript, 0x5d00), mulmod(7804796917526052625593875692382519354165159678502462229810454190718346984926, mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x5d20), mulmod(mload(add(transcript, 0x1160)), mload(add(transcript, 0x5d00)), f_q))
mstore(add(transcript, 0x5d40), addmod(mload(add(transcript, 0x1740)), mload(add(transcript, 0x5d20)), f_q))
mstore(add(transcript, 0x5d60), addmod(mload(add(transcript, 0x5d40)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x5d80), mulmod(mload(add(transcript, 0x5d60)), mload(add(transcript, 0x5ce0)), f_q))
mstore(add(transcript, 0x5da0), mulmod(3747172222523987354785320406972290682523618221112915484562907750320038756890, mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x5dc0), mulmod(mload(add(transcript, 0x1160)), mload(add(transcript, 0x5da0)), f_q))
mstore(add(transcript, 0x5de0), addmod(mload(add(transcript, 0x3060)), mload(add(transcript, 0x5dc0)), f_q))
mstore(add(transcript, 0x5e00), addmod(mload(add(transcript, 0x5de0)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x5e20), mulmod(mload(add(transcript, 0x5e00)), mload(add(transcript, 0x5d80)), f_q))
mstore(add(transcript, 0x5e40), mulmod(mload(add(transcript, 0x5e20)), mload(add(transcript, 0x20a0)), f_q))
mstore(add(transcript, 0x5e60), addmod(mload(add(transcript, 0x5bc0)), sub(f_q, mload(add(transcript, 0x5e40))), f_q))
mstore(add(transcript, 0x5e80), mulmod(mload(add(transcript, 0x5e60)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x5ea0), addmod(mload(add(transcript, 0x59c0)), mload(add(transcript, 0x5e80)), f_q))
mstore(add(transcript, 0x5ec0), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x5ea0)), f_q))
mstore(add(transcript, 0x5ee0), addmod(1, sub(f_q, mload(add(transcript, 0x20e0))), f_q))
mstore(add(transcript, 0x5f00), mulmod(mload(add(transcript, 0x5ee0)), mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x5f20), addmod(mload(add(transcript, 0x5ec0)), mload(add(transcript, 0x5f00)), f_q))
mstore(add(transcript, 0x5f40), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x5f20)), f_q))
mstore(add(transcript, 0x5f60), mulmod(mload(add(transcript, 0x20e0)), mload(add(transcript, 0x20e0)), f_q))
mstore(add(transcript, 0x5f80), addmod(mload(add(transcript, 0x5f60)), sub(f_q, mload(add(transcript, 0x20e0))), f_q))
mstore(add(transcript, 0x5fa0), mulmod(mload(add(transcript, 0x5f80)), mload(add(transcript, 0x2f20)), f_q))
mstore(add(transcript, 0x5fc0), addmod(mload(add(transcript, 0x5f40)), mload(add(transcript, 0x5fa0)), f_q))
mstore(add(transcript, 0x5fe0), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x5fc0)), f_q))
mstore(add(transcript, 0x6000), addmod(mload(add(transcript, 0x2120)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x6020), mulmod(mload(add(transcript, 0x6000)), mload(add(transcript, 0x2100)), f_q))
mstore(add(transcript, 0x6040), addmod(mload(add(transcript, 0x2160)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x6060), mulmod(mload(add(transcript, 0x6040)), mload(add(transcript, 0x6020)), f_q))
mstore(add(transcript, 0x6080), mulmod(mload(add(transcript, 0x1720)), mload(add(transcript, 0x1740)), f_q))
mstore(add(transcript, 0x60a0), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x6080)), f_q))
mstore(add(transcript, 0x60c0), mulmod(mload(add(transcript, 0x15a0)), mload(add(transcript, 0x1740)), f_q))
mstore(add(transcript, 0x60e0), mulmod(18446744073709551615, mload(add(transcript, 0x3920)), f_q))
mstore(add(transcript, 0x6100), addmod(mload(add(transcript, 0x60c0)), mload(add(transcript, 0x60e0)), f_q))
mstore(add(transcript, 0x6120), addmod(mload(add(transcript, 0x60a0)), mload(add(transcript, 0x6100)), f_q))
mstore(add(transcript, 0x6140), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x6120)), f_q))
mstore(add(transcript, 0x6160), mulmod(mload(add(transcript, 0x1780)), mload(add(transcript, 0x1740)), f_q))
mstore(add(transcript, 0x6180), addmod(mload(add(transcript, 0x6160)), mload(add(transcript, 0x60e0)), f_q))
mstore(add(transcript, 0x61a0), addmod(mload(add(transcript, 0x6140)), mload(add(transcript, 0x6180)), f_q))
mstore(add(transcript, 0x61c0), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x61a0)), f_q))
mstore(add(transcript, 0x61e0), mulmod(mload(add(transcript, 0x1600)), mload(add(transcript, 0x1740)), f_q))
mstore(add(transcript, 0x6200), addmod(mload(add(transcript, 0x61c0)), mload(add(transcript, 0x61e0)), f_q))
mstore(add(transcript, 0x6220), addmod(mload(add(transcript, 0x6200)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x6240), mulmod(mload(add(transcript, 0x6220)), mload(add(transcript, 0x20e0)), f_q))
mstore(add(transcript, 0x6260), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x1860)), f_q))
mstore(add(transcript, 0x6280), addmod(mload(add(transcript, 0x6260)), mload(add(transcript, 0x1880)), f_q))
mstore(add(transcript, 0x62a0), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x6280)), f_q))
mstore(add(transcript, 0x62c0), addmod(mload(add(transcript, 0x62a0)), mload(add(transcript, 0x18a0)), f_q))
mstore(add(transcript, 0x62e0), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x62c0)), f_q))
mstore(add(transcript, 0x6300), addmod(mload(add(transcript, 0x62e0)), mload(add(transcript, 0x18c0)), f_q))
mstore(add(transcript, 0x6320), addmod(mload(add(transcript, 0x6300)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x6340), mulmod(mload(add(transcript, 0x6320)), mload(add(transcript, 0x6240)), f_q))
mstore(add(transcript, 0x6360), addmod(mload(add(transcript, 0x6060)), sub(f_q, mload(add(transcript, 0x6340))), f_q))
mstore(add(transcript, 0x6380), mulmod(mload(add(transcript, 0x6360)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x63a0), addmod(mload(add(transcript, 0x5fe0)), mload(add(transcript, 0x6380)), f_q))
mstore(add(transcript, 0x63c0), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x63a0)), f_q))
mstore(add(transcript, 0x63e0), addmod(mload(add(transcript, 0x2120)), sub(f_q, mload(add(transcript, 0x2160))), f_q))
mstore(add(transcript, 0x6400), mulmod(mload(add(transcript, 0x63e0)), mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x6420), addmod(mload(add(transcript, 0x63c0)), mload(add(transcript, 0x6400)), f_q))
mstore(add(transcript, 0x6440), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x6420)), f_q))
mstore(add(transcript, 0x6460), mulmod(mload(add(transcript, 0x63e0)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x6480), addmod(mload(add(transcript, 0x2120)), sub(f_q, mload(add(transcript, 0x2140))), f_q))
mstore(add(transcript, 0x64a0), mulmod(mload(add(transcript, 0x6480)), mload(add(transcript, 0x6460)), f_q))
mstore(add(transcript, 0x64c0), addmod(mload(add(transcript, 0x6440)), mload(add(transcript, 0x64a0)), f_q))
mstore(add(transcript, 0x64e0), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x64c0)), f_q))
mstore(add(transcript, 0x6500), addmod(1, sub(f_q, mload(add(transcript, 0x2180))), f_q))
mstore(add(transcript, 0x6520), mulmod(mload(add(transcript, 0x6500)), mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x6540), addmod(mload(add(transcript, 0x64e0)), mload(add(transcript, 0x6520)), f_q))
mstore(add(transcript, 0x6560), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x6540)), f_q))
mstore(add(transcript, 0x6580), mulmod(mload(add(transcript, 0x2180)), mload(add(transcript, 0x2180)), f_q))
mstore(add(transcript, 0x65a0), addmod(mload(add(transcript, 0x6580)), sub(f_q, mload(add(transcript, 0x2180))), f_q))
mstore(add(transcript, 0x65c0), mulmod(mload(add(transcript, 0x65a0)), mload(add(transcript, 0x2f20)), f_q))
mstore(add(transcript, 0x65e0), addmod(mload(add(transcript, 0x6560)), mload(add(transcript, 0x65c0)), f_q))
mstore(add(transcript, 0x6600), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x65e0)), f_q))
mstore(add(transcript, 0x6620), addmod(mload(add(transcript, 0x21c0)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x6640), mulmod(mload(add(transcript, 0x6620)), mload(add(transcript, 0x21a0)), f_q))
mstore(add(transcript, 0x6660), addmod(mload(add(transcript, 0x2200)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x6680), mulmod(mload(add(transcript, 0x6660)), mload(add(transcript, 0x6640)), f_q))
mstore(add(transcript, 0x66a0), mulmod(mload(add(transcript, 0x1660)), mload(add(transcript, 0x1740)), f_q))
mstore(add(transcript, 0x66c0), mulmod(mload(add(transcript, 0x1600)), mload(add(transcript, 0x66a0)), f_q))
mstore(add(transcript, 0x66e0), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x66c0)), f_q))
mstore(add(transcript, 0x6700), mulmod(mload(add(transcript, 0x15a0)), mload(add(transcript, 0x66a0)), f_q))
mstore(add(transcript, 0x6720), addmod(1, sub(f_q, mload(add(transcript, 0x66a0))), f_q))
mstore(add(transcript, 0x6740), mulmod(18446744073709551615, mload(add(transcript, 0x6720)), f_q))
mstore(add(transcript, 0x6760), addmod(mload(add(transcript, 0x6700)), mload(add(transcript, 0x6740)), f_q))
mstore(add(transcript, 0x6780), addmod(mload(add(transcript, 0x66e0)), mload(add(transcript, 0x6760)), f_q))
mstore(add(transcript, 0x67a0), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x6780)), f_q))
mstore(add(transcript, 0x67c0), addmod(mload(add(transcript, 0x67a0)), 18446744073709551615, f_q))
mstore(add(transcript, 0x67e0), addmod(mload(add(transcript, 0x67c0)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x6800), mulmod(mload(add(transcript, 0x67e0)), mload(add(transcript, 0x2180)), f_q))
mstore(add(transcript, 0x6820), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x18e0)), f_q))
mstore(add(transcript, 0x6840), addmod(mload(add(transcript, 0x6820)), mload(add(transcript, 0x1900)), f_q))
mstore(add(transcript, 0x6860), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x6840)), f_q))
mstore(add(transcript, 0x6880), addmod(mload(add(transcript, 0x6860)), mload(add(transcript, 0x1920)), f_q))
mstore(add(transcript, 0x68a0), addmod(mload(add(transcript, 0x6880)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x68c0), mulmod(mload(add(transcript, 0x68a0)), mload(add(transcript, 0x6800)), f_q))
mstore(add(transcript, 0x68e0), addmod(mload(add(transcript, 0x6680)), sub(f_q, mload(add(transcript, 0x68c0))), f_q))
mstore(add(transcript, 0x6900), mulmod(mload(add(transcript, 0x68e0)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x6920), addmod(mload(add(transcript, 0x6600)), mload(add(transcript, 0x6900)), f_q))
mstore(add(transcript, 0x6940), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x6920)), f_q))
mstore(add(transcript, 0x6960), addmod(mload(add(transcript, 0x21c0)), sub(f_q, mload(add(transcript, 0x2200))), f_q))
mstore(add(transcript, 0x6980), mulmod(mload(add(transcript, 0x6960)), mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x69a0), addmod(mload(add(transcript, 0x6940)), mload(add(transcript, 0x6980)), f_q))
mstore(add(transcript, 0x69c0), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x69a0)), f_q))
mstore(add(transcript, 0x69e0), mulmod(mload(add(transcript, 0x6960)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x6a00), addmod(mload(add(transcript, 0x21c0)), sub(f_q, mload(add(transcript, 0x21e0))), f_q))
mstore(add(transcript, 0x6a20), mulmod(mload(add(transcript, 0x6a00)), mload(add(transcript, 0x69e0)), f_q))
mstore(add(transcript, 0x6a40), addmod(mload(add(transcript, 0x69c0)), mload(add(transcript, 0x6a20)), f_q))
mstore(add(transcript, 0x6a60), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x6a40)), f_q))
mstore(add(transcript, 0x6a80), addmod(1, sub(f_q, mload(add(transcript, 0x2220))), f_q))
mstore(add(transcript, 0x6aa0), mulmod(mload(add(transcript, 0x6a80)), mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x6ac0), addmod(mload(add(transcript, 0x6a60)), mload(add(transcript, 0x6aa0)), f_q))
mstore(add(transcript, 0x6ae0), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x6ac0)), f_q))
mstore(add(transcript, 0x6b00), mulmod(mload(add(transcript, 0x2220)), mload(add(transcript, 0x2220)), f_q))
mstore(add(transcript, 0x6b20), addmod(mload(add(transcript, 0x6b00)), sub(f_q, mload(add(transcript, 0x2220))), f_q))
mstore(add(transcript, 0x6b40), mulmod(mload(add(transcript, 0x6b20)), mload(add(transcript, 0x2f20)), f_q))
mstore(add(transcript, 0x6b60), addmod(mload(add(transcript, 0x6ae0)), mload(add(transcript, 0x6b40)), f_q))
mstore(add(transcript, 0x6b80), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x6b60)), f_q))
mstore(add(transcript, 0x6ba0), addmod(mload(add(transcript, 0x2260)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x6bc0), mulmod(mload(add(transcript, 0x6ba0)), mload(add(transcript, 0x2240)), f_q))
mstore(add(transcript, 0x6be0), addmod(mload(add(transcript, 0x22a0)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x6c00), mulmod(mload(add(transcript, 0x6be0)), mload(add(transcript, 0x6bc0)), f_q))
mstore(add(transcript, 0x6c20), mulmod(mload(add(transcript, 0x17a0)), mload(add(transcript, 0x1740)), f_q))
mstore(add(transcript, 0x6c40), mulmod(mload(add(transcript, 0x1600)), mload(add(transcript, 0x6c20)), f_q))
mstore(add(transcript, 0x6c60), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x6c40)), f_q))
mstore(add(transcript, 0x6c80), addmod(mload(add(transcript, 0x6c60)), 18446744073709551615, f_q))
mstore(add(transcript, 0x6ca0), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x6c80)), f_q))
mstore(add(transcript, 0x6cc0), mulmod(mload(add(transcript, 0x1780)), mload(add(transcript, 0x6c20)), f_q))
mstore(add(transcript, 0x6ce0), addmod(1, sub(f_q, mload(add(transcript, 0x6c20))), f_q))
mstore(add(transcript, 0x6d00), mulmod(18446744073709551615, mload(add(transcript, 0x6ce0)), f_q))
mstore(add(transcript, 0x6d20), addmod(mload(add(transcript, 0x6cc0)), mload(add(transcript, 0x6d00)), f_q))
mstore(add(transcript, 0x6d40), addmod(mload(add(transcript, 0x6ca0)), mload(add(transcript, 0x6d20)), f_q))
mstore(add(transcript, 0x6d60), addmod(mload(add(transcript, 0x6d40)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x6d80), mulmod(mload(add(transcript, 0x6d60)), mload(add(transcript, 0x2220)), f_q))
mstore(add(transcript, 0x6da0), mulmod(mload(add(transcript, 0x68a0)), mload(add(transcript, 0x6d80)), f_q))
mstore(add(transcript, 0x6dc0), addmod(mload(add(transcript, 0x6c00)), sub(f_q, mload(add(transcript, 0x6da0))), f_q))
mstore(add(transcript, 0x6de0), mulmod(mload(add(transcript, 0x6dc0)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x6e00), addmod(mload(add(transcript, 0x6b80)), mload(add(transcript, 0x6de0)), f_q))
mstore(add(transcript, 0x6e20), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x6e00)), f_q))
mstore(add(transcript, 0x6e40), addmod(mload(add(transcript, 0x2260)), sub(f_q, mload(add(transcript, 0x22a0))), f_q))
mstore(add(transcript, 0x6e60), mulmod(mload(add(transcript, 0x6e40)), mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x6e80), addmod(mload(add(transcript, 0x6e20)), mload(add(transcript, 0x6e60)), f_q))
mstore(add(transcript, 0x6ea0), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x6e80)), f_q))
mstore(add(transcript, 0x6ec0), mulmod(mload(add(transcript, 0x6e40)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x6ee0), addmod(mload(add(transcript, 0x2260)), sub(f_q, mload(add(transcript, 0x2280))), f_q))
mstore(add(transcript, 0x6f00), mulmod(mload(add(transcript, 0x6ee0)), mload(add(transcript, 0x6ec0)), f_q))
mstore(add(transcript, 0x6f20), addmod(mload(add(transcript, 0x6ea0)), mload(add(transcript, 0x6f00)), f_q))
mstore(add(transcript, 0x6f40), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x6f20)), f_q))
mstore(add(transcript, 0x6f60), addmod(1, sub(f_q, mload(add(transcript, 0x22c0))), f_q))
mstore(add(transcript, 0x6f80), mulmod(mload(add(transcript, 0x6f60)), mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x6fa0), addmod(mload(add(transcript, 0x6f40)), mload(add(transcript, 0x6f80)), f_q))
mstore(add(transcript, 0x6fc0), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x6fa0)), f_q))
mstore(add(transcript, 0x6fe0), mulmod(mload(add(transcript, 0x22c0)), mload(add(transcript, 0x22c0)), f_q))
mstore(add(transcript, 0x7000), addmod(mload(add(transcript, 0x6fe0)), sub(f_q, mload(add(transcript, 0x22c0))), f_q))
mstore(add(transcript, 0x7020), mulmod(mload(add(transcript, 0x7000)), mload(add(transcript, 0x2f20)), f_q))
mstore(add(transcript, 0x7040), addmod(mload(add(transcript, 0x6fc0)), mload(add(transcript, 0x7020)), f_q))
mstore(add(transcript, 0x7060), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x7040)), f_q))
mstore(add(transcript, 0x7080), addmod(mload(add(transcript, 0x2300)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x70a0), mulmod(mload(add(transcript, 0x7080)), mload(add(transcript, 0x22e0)), f_q))
mstore(add(transcript, 0x70c0), addmod(mload(add(transcript, 0x2340)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x70e0), mulmod(mload(add(transcript, 0x70c0)), mload(add(transcript, 0x70a0)), f_q))
mstore(add(transcript, 0x7100), mulmod(mload(add(transcript, 0x15c0)), mload(add(transcript, 0x1740)), f_q))
mstore(add(transcript, 0x7120), addmod(mload(add(transcript, 0x7100)), mload(add(transcript, 0x60e0)), f_q))
mstore(add(transcript, 0x7140), addmod(mload(add(transcript, 0x60a0)), mload(add(transcript, 0x7120)), f_q))
mstore(add(transcript, 0x7160), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x7140)), f_q))
mstore(add(transcript, 0x7180), mulmod(mload(add(transcript, 0x17c0)), mload(add(transcript, 0x1740)), f_q))
mstore(add(transcript, 0x71a0), addmod(mload(add(transcript, 0x7180)), mload(add(transcript, 0x60e0)), f_q))
mstore(add(transcript, 0x71c0), addmod(mload(add(transcript, 0x7160)), mload(add(transcript, 0x71a0)), f_q))
mstore(add(transcript, 0x71e0), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x71c0)), f_q))
mstore(add(transcript, 0x7200), mulmod(mload(add(transcript, 0x1620)), mload(add(transcript, 0x1740)), f_q))
mstore(add(transcript, 0x7220), addmod(mload(add(transcript, 0x71e0)), mload(add(transcript, 0x7200)), f_q))
mstore(add(transcript, 0x7240), addmod(mload(add(transcript, 0x7220)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x7260), mulmod(mload(add(transcript, 0x7240)), mload(add(transcript, 0x22c0)), f_q))
mstore(add(transcript, 0x7280), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x1940)), f_q))
mstore(add(transcript, 0x72a0), addmod(mload(add(transcript, 0x7280)), mload(add(transcript, 0x1960)), f_q))
mstore(add(transcript, 0x72c0), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x72a0)), f_q))
mstore(add(transcript, 0x72e0), addmod(mload(add(transcript, 0x72c0)), mload(add(transcript, 0x1980)), f_q))
mstore(add(transcript, 0x7300), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x72e0)), f_q))
mstore(add(transcript, 0x7320), addmod(mload(add(transcript, 0x7300)), mload(add(transcript, 0x19a0)), f_q))
mstore(add(transcript, 0x7340), addmod(mload(add(transcript, 0x7320)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x7360), mulmod(mload(add(transcript, 0x7340)), mload(add(transcript, 0x7260)), f_q))
mstore(add(transcript, 0x7380), addmod(mload(add(transcript, 0x70e0)), sub(f_q, mload(add(transcript, 0x7360))), f_q))
mstore(add(transcript, 0x73a0), mulmod(mload(add(transcript, 0x7380)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x73c0), addmod(mload(add(transcript, 0x7060)), mload(add(transcript, 0x73a0)), f_q))
mstore(add(transcript, 0x73e0), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x73c0)), f_q))
mstore(add(transcript, 0x7400), addmod(mload(add(transcript, 0x2300)), sub(f_q, mload(add(transcript, 0x2340))), f_q))
mstore(add(transcript, 0x7420), mulmod(mload(add(transcript, 0x7400)), mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x7440), addmod(mload(add(transcript, 0x73e0)), mload(add(transcript, 0x7420)), f_q))
mstore(add(transcript, 0x7460), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x7440)), f_q))
mstore(add(transcript, 0x7480), mulmod(mload(add(transcript, 0x7400)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x74a0), addmod(mload(add(transcript, 0x2300)), sub(f_q, mload(add(transcript, 0x2320))), f_q))
mstore(add(transcript, 0x74c0), mulmod(mload(add(transcript, 0x74a0)), mload(add(transcript, 0x7480)), f_q))
mstore(add(transcript, 0x74e0), addmod(mload(add(transcript, 0x7460)), mload(add(transcript, 0x74c0)), f_q))
mstore(add(transcript, 0x7500), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x74e0)), f_q))
mstore(add(transcript, 0x7520), addmod(1, sub(f_q, mload(add(transcript, 0x2360))), f_q))
mstore(add(transcript, 0x7540), mulmod(mload(add(transcript, 0x7520)), mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x7560), addmod(mload(add(transcript, 0x7500)), mload(add(transcript, 0x7540)), f_q))
mstore(add(transcript, 0x7580), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x7560)), f_q))
mstore(add(transcript, 0x75a0), mulmod(mload(add(transcript, 0x2360)), mload(add(transcript, 0x2360)), f_q))
mstore(add(transcript, 0x75c0), addmod(mload(add(transcript, 0x75a0)), sub(f_q, mload(add(transcript, 0x2360))), f_q))
mstore(add(transcript, 0x75e0), mulmod(mload(add(transcript, 0x75c0)), mload(add(transcript, 0x2f20)), f_q))
mstore(add(transcript, 0x7600), addmod(mload(add(transcript, 0x7580)), mload(add(transcript, 0x75e0)), f_q))
mstore(add(transcript, 0x7620), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x7600)), f_q))
mstore(add(transcript, 0x7640), addmod(mload(add(transcript, 0x23a0)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x7660), mulmod(mload(add(transcript, 0x7640)), mload(add(transcript, 0x2380)), f_q))
mstore(add(transcript, 0x7680), addmod(mload(add(transcript, 0x23e0)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x76a0), mulmod(mload(add(transcript, 0x7680)), mload(add(transcript, 0x7660)), f_q))
mstore(add(transcript, 0x76c0), mulmod(mload(add(transcript, 0x1680)), mload(add(transcript, 0x1740)), f_q))
mstore(add(transcript, 0x76e0), mulmod(mload(add(transcript, 0x1620)), mload(add(transcript, 0x76c0)), f_q))
mstore(add(transcript, 0x7700), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x76e0)), f_q))
mstore(add(transcript, 0x7720), mulmod(mload(add(transcript, 0x15c0)), mload(add(transcript, 0x76c0)), f_q))
mstore(add(transcript, 0x7740), addmod(1, sub(f_q, mload(add(transcript, 0x76c0))), f_q))
mstore(add(transcript, 0x7760), mulmod(18446744073709551615, mload(add(transcript, 0x7740)), f_q))
mstore(add(transcript, 0x7780), addmod(mload(add(transcript, 0x7720)), mload(add(transcript, 0x7760)), f_q))
mstore(add(transcript, 0x77a0), addmod(mload(add(transcript, 0x7700)), mload(add(transcript, 0x7780)), f_q))
mstore(add(transcript, 0x77c0), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x77a0)), f_q))
mstore(add(transcript, 0x77e0), addmod(mload(add(transcript, 0x77c0)), 18446744073709551615, f_q))
mstore(add(transcript, 0x7800), addmod(mload(add(transcript, 0x77e0)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x7820), mulmod(mload(add(transcript, 0x7800)), mload(add(transcript, 0x2360)), f_q))
mstore(add(transcript, 0x7840), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x19c0)), f_q))
mstore(add(transcript, 0x7860), addmod(mload(add(transcript, 0x7840)), mload(add(transcript, 0x19e0)), f_q))
mstore(add(transcript, 0x7880), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x7860)), f_q))
mstore(add(transcript, 0x78a0), addmod(mload(add(transcript, 0x7880)), mload(add(transcript, 0x1a00)), f_q))
mstore(add(transcript, 0x78c0), addmod(mload(add(transcript, 0x78a0)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x78e0), mulmod(mload(add(transcript, 0x78c0)), mload(add(transcript, 0x7820)), f_q))
mstore(add(transcript, 0x7900), addmod(mload(add(transcript, 0x76a0)), sub(f_q, mload(add(transcript, 0x78e0))), f_q))
mstore(add(transcript, 0x7920), mulmod(mload(add(transcript, 0x7900)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x7940), addmod(mload(add(transcript, 0x7620)), mload(add(transcript, 0x7920)), f_q))
mstore(add(transcript, 0x7960), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x7940)), f_q))
mstore(add(transcript, 0x7980), addmod(mload(add(transcript, 0x23a0)), sub(f_q, mload(add(transcript, 0x23e0))), f_q))
mstore(add(transcript, 0x79a0), mulmod(mload(add(transcript, 0x7980)), mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x79c0), addmod(mload(add(transcript, 0x7960)), mload(add(transcript, 0x79a0)), f_q))
mstore(add(transcript, 0x79e0), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x79c0)), f_q))
mstore(add(transcript, 0x7a00), mulmod(mload(add(transcript, 0x7980)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x7a20), addmod(mload(add(transcript, 0x23a0)), sub(f_q, mload(add(transcript, 0x23c0))), f_q))
mstore(add(transcript, 0x7a40), mulmod(mload(add(transcript, 0x7a20)), mload(add(transcript, 0x7a00)), f_q))
mstore(add(transcript, 0x7a60), addmod(mload(add(transcript, 0x79e0)), mload(add(transcript, 0x7a40)), f_q))
mstore(add(transcript, 0x7a80), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x7a60)), f_q))
mstore(add(transcript, 0x7aa0), addmod(1, sub(f_q, mload(add(transcript, 0x2400))), f_q))
mstore(add(transcript, 0x7ac0), mulmod(mload(add(transcript, 0x7aa0)), mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x7ae0), addmod(mload(add(transcript, 0x7a80)), mload(add(transcript, 0x7ac0)), f_q))
mstore(add(transcript, 0x7b00), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x7ae0)), f_q))
mstore(add(transcript, 0x7b20), mulmod(mload(add(transcript, 0x2400)), mload(add(transcript, 0x2400)), f_q))
mstore(add(transcript, 0x7b40), addmod(mload(add(transcript, 0x7b20)), sub(f_q, mload(add(transcript, 0x2400))), f_q))
mstore(add(transcript, 0x7b60), mulmod(mload(add(transcript, 0x7b40)), mload(add(transcript, 0x2f20)), f_q))
mstore(add(transcript, 0x7b80), addmod(mload(add(transcript, 0x7b00)), mload(add(transcript, 0x7b60)), f_q))
mstore(add(transcript, 0x7ba0), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x7b80)), f_q))
mstore(add(transcript, 0x7bc0), addmod(mload(add(transcript, 0x2440)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x7be0), mulmod(mload(add(transcript, 0x7bc0)), mload(add(transcript, 0x2420)), f_q))
mstore(add(transcript, 0x7c00), addmod(mload(add(transcript, 0x2480)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x7c20), mulmod(mload(add(transcript, 0x7c00)), mload(add(transcript, 0x7be0)), f_q))
mstore(add(transcript, 0x7c40), mulmod(mload(add(transcript, 0x17e0)), mload(add(transcript, 0x1740)), f_q))
mstore(add(transcript, 0x7c60), mulmod(mload(add(transcript, 0x1620)), mload(add(transcript, 0x7c40)), f_q))
mstore(add(transcript, 0x7c80), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x7c60)), f_q))
mstore(add(transcript, 0x7ca0), addmod(mload(add(transcript, 0x7c80)), 18446744073709551615, f_q))
mstore(add(transcript, 0x7cc0), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x7ca0)), f_q))
mstore(add(transcript, 0x7ce0), mulmod(mload(add(transcript, 0x17c0)), mload(add(transcript, 0x7c40)), f_q))
mstore(add(transcript, 0x7d00), addmod(1, sub(f_q, mload(add(transcript, 0x7c40))), f_q))
mstore(add(transcript, 0x7d20), mulmod(18446744073709551615, mload(add(transcript, 0x7d00)), f_q))
mstore(add(transcript, 0x7d40), addmod(mload(add(transcript, 0x7ce0)), mload(add(transcript, 0x7d20)), f_q))
mstore(add(transcript, 0x7d60), addmod(mload(add(transcript, 0x7cc0)), mload(add(transcript, 0x7d40)), f_q))
mstore(add(transcript, 0x7d80), addmod(mload(add(transcript, 0x7d60)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x7da0), mulmod(mload(add(transcript, 0x7d80)), mload(add(transcript, 0x2400)), f_q))
mstore(add(transcript, 0x7dc0), mulmod(mload(add(transcript, 0x78c0)), mload(add(transcript, 0x7da0)), f_q))
mstore(add(transcript, 0x7de0), addmod(mload(add(transcript, 0x7c20)), sub(f_q, mload(add(transcript, 0x7dc0))), f_q))
mstore(add(transcript, 0x7e00), mulmod(mload(add(transcript, 0x7de0)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x7e20), addmod(mload(add(transcript, 0x7ba0)), mload(add(transcript, 0x7e00)), f_q))
mstore(add(transcript, 0x7e40), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x7e20)), f_q))
mstore(add(transcript, 0x7e60), addmod(mload(add(transcript, 0x2440)), sub(f_q, mload(add(transcript, 0x2480))), f_q))
mstore(add(transcript, 0x7e80), mulmod(mload(add(transcript, 0x7e60)), mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x7ea0), addmod(mload(add(transcript, 0x7e40)), mload(add(transcript, 0x7e80)), f_q))
mstore(add(transcript, 0x7ec0), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x7ea0)), f_q))
mstore(add(transcript, 0x7ee0), mulmod(mload(add(transcript, 0x7e60)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x7f00), addmod(mload(add(transcript, 0x2440)), sub(f_q, mload(add(transcript, 0x2460))), f_q))
mstore(add(transcript, 0x7f20), mulmod(mload(add(transcript, 0x7f00)), mload(add(transcript, 0x7ee0)), f_q))
mstore(add(transcript, 0x7f40), addmod(mload(add(transcript, 0x7ec0)), mload(add(transcript, 0x7f20)), f_q))
mstore(add(transcript, 0x7f60), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x7f40)), f_q))
mstore(add(transcript, 0x7f80), addmod(1, sub(f_q, mload(add(transcript, 0x24a0))), f_q))
mstore(add(transcript, 0x7fa0), mulmod(mload(add(transcript, 0x7f80)), mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x7fc0), addmod(mload(add(transcript, 0x7f60)), mload(add(transcript, 0x7fa0)), f_q))
mstore(add(transcript, 0x7fe0), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x7fc0)), f_q))
mstore(add(transcript, 0x8000), mulmod(mload(add(transcript, 0x24a0)), mload(add(transcript, 0x24a0)), f_q))
mstore(add(transcript, 0x8020), addmod(mload(add(transcript, 0x8000)), sub(f_q, mload(add(transcript, 0x24a0))), f_q))
mstore(add(transcript, 0x8040), mulmod(mload(add(transcript, 0x8020)), mload(add(transcript, 0x2f20)), f_q))
mstore(add(transcript, 0x8060), addmod(mload(add(transcript, 0x7fe0)), mload(add(transcript, 0x8040)), f_q))
mstore(add(transcript, 0x8080), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x8060)), f_q))
mstore(add(transcript, 0x80a0), addmod(mload(add(transcript, 0x24e0)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x80c0), mulmod(mload(add(transcript, 0x80a0)), mload(add(transcript, 0x24c0)), f_q))
mstore(add(transcript, 0x80e0), addmod(mload(add(transcript, 0x2520)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x8100), mulmod(mload(add(transcript, 0x80e0)), mload(add(transcript, 0x80c0)), f_q))
mstore(add(transcript, 0x8120), mulmod(mload(add(transcript, 0x15e0)), mload(add(transcript, 0x1740)), f_q))
mstore(add(transcript, 0x8140), addmod(mload(add(transcript, 0x8120)), mload(add(transcript, 0x60e0)), f_q))
mstore(add(transcript, 0x8160), addmod(mload(add(transcript, 0x60a0)), mload(add(transcript, 0x8140)), f_q))
mstore(add(transcript, 0x8180), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x8160)), f_q))
mstore(add(transcript, 0x81a0), mulmod(mload(add(transcript, 0x1800)), mload(add(transcript, 0x1740)), f_q))
mstore(add(transcript, 0x81c0), addmod(mload(add(transcript, 0x81a0)), mload(add(transcript, 0x60e0)), f_q))
mstore(add(transcript, 0x81e0), addmod(mload(add(transcript, 0x8180)), mload(add(transcript, 0x81c0)), f_q))
mstore(add(transcript, 0x8200), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x81e0)), f_q))
mstore(add(transcript, 0x8220), mulmod(mload(add(transcript, 0x1640)), mload(add(transcript, 0x1740)), f_q))
mstore(add(transcript, 0x8240), addmod(mload(add(transcript, 0x8200)), mload(add(transcript, 0x8220)), f_q))
mstore(add(transcript, 0x8260), addmod(mload(add(transcript, 0x8240)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x8280), mulmod(mload(add(transcript, 0x8260)), mload(add(transcript, 0x24a0)), f_q))
mstore(add(transcript, 0x82a0), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x1a20)), f_q))
mstore(add(transcript, 0x82c0), addmod(mload(add(transcript, 0x82a0)), mload(add(transcript, 0x1a40)), f_q))
mstore(add(transcript, 0x82e0), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x82c0)), f_q))
mstore(add(transcript, 0x8300), addmod(mload(add(transcript, 0x82e0)), mload(add(transcript, 0x1a60)), f_q))
mstore(add(transcript, 0x8320), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x8300)), f_q))
mstore(add(transcript, 0x8340), addmod(mload(add(transcript, 0x8320)), mload(add(transcript, 0x1a80)), f_q))
mstore(add(transcript, 0x8360), addmod(mload(add(transcript, 0x8340)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x8380), mulmod(mload(add(transcript, 0x8360)), mload(add(transcript, 0x8280)), f_q))
mstore(add(transcript, 0x83a0), addmod(mload(add(transcript, 0x8100)), sub(f_q, mload(add(transcript, 0x8380))), f_q))
mstore(add(transcript, 0x83c0), mulmod(mload(add(transcript, 0x83a0)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x83e0), addmod(mload(add(transcript, 0x8080)), mload(add(transcript, 0x83c0)), f_q))
mstore(add(transcript, 0x8400), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x83e0)), f_q))
mstore(add(transcript, 0x8420), addmod(mload(add(transcript, 0x24e0)), sub(f_q, mload(add(transcript, 0x2520))), f_q))
mstore(add(transcript, 0x8440), mulmod(mload(add(transcript, 0x8420)), mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x8460), addmod(mload(add(transcript, 0x8400)), mload(add(transcript, 0x8440)), f_q))
mstore(add(transcript, 0x8480), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x8460)), f_q))
mstore(add(transcript, 0x84a0), mulmod(mload(add(transcript, 0x8420)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x84c0), addmod(mload(add(transcript, 0x24e0)), sub(f_q, mload(add(transcript, 0x2500))), f_q))
mstore(add(transcript, 0x84e0), mulmod(mload(add(transcript, 0x84c0)), mload(add(transcript, 0x84a0)), f_q))
mstore(add(transcript, 0x8500), addmod(mload(add(transcript, 0x8480)), mload(add(transcript, 0x84e0)), f_q))
mstore(add(transcript, 0x8520), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x8500)), f_q))
mstore(add(transcript, 0x8540), addmod(1, sub(f_q, mload(add(transcript, 0x2540))), f_q))
mstore(add(transcript, 0x8560), mulmod(mload(add(transcript, 0x8540)), mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x8580), addmod(mload(add(transcript, 0x8520)), mload(add(transcript, 0x8560)), f_q))
mstore(add(transcript, 0x85a0), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x8580)), f_q))
mstore(add(transcript, 0x85c0), mulmod(mload(add(transcript, 0x2540)), mload(add(transcript, 0x2540)), f_q))
mstore(add(transcript, 0x85e0), addmod(mload(add(transcript, 0x85c0)), sub(f_q, mload(add(transcript, 0x2540))), f_q))
mstore(add(transcript, 0x8600), mulmod(mload(add(transcript, 0x85e0)), mload(add(transcript, 0x2f20)), f_q))
mstore(add(transcript, 0x8620), addmod(mload(add(transcript, 0x85a0)), mload(add(transcript, 0x8600)), f_q))
mstore(add(transcript, 0x8640), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x8620)), f_q))
mstore(add(transcript, 0x8660), addmod(mload(add(transcript, 0x2580)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x8680), mulmod(mload(add(transcript, 0x8660)), mload(add(transcript, 0x2560)), f_q))
mstore(add(transcript, 0x86a0), addmod(mload(add(transcript, 0x25c0)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x86c0), mulmod(mload(add(transcript, 0x86a0)), mload(add(transcript, 0x8680)), f_q))
mstore(add(transcript, 0x86e0), mulmod(mload(add(transcript, 0x16a0)), mload(add(transcript, 0x1740)), f_q))
mstore(add(transcript, 0x8700), mulmod(mload(add(transcript, 0x1640)), mload(add(transcript, 0x86e0)), f_q))
mstore(add(transcript, 0x8720), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x8700)), f_q))
mstore(add(transcript, 0x8740), mulmod(mload(add(transcript, 0x15e0)), mload(add(transcript, 0x86e0)), f_q))
mstore(add(transcript, 0x8760), addmod(1, sub(f_q, mload(add(transcript, 0x86e0))), f_q))
mstore(add(transcript, 0x8780), mulmod(18446744073709551615, mload(add(transcript, 0x8760)), f_q))
mstore(add(transcript, 0x87a0), addmod(mload(add(transcript, 0x8740)), mload(add(transcript, 0x8780)), f_q))
mstore(add(transcript, 0x87c0), addmod(mload(add(transcript, 0x8720)), mload(add(transcript, 0x87a0)), f_q))
mstore(add(transcript, 0x87e0), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x87c0)), f_q))
mstore(add(transcript, 0x8800), addmod(mload(add(transcript, 0x87e0)), 18446744073709551615, f_q))
mstore(add(transcript, 0x8820), addmod(mload(add(transcript, 0x8800)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x8840), mulmod(mload(add(transcript, 0x8820)), mload(add(transcript, 0x2540)), f_q))
mstore(add(transcript, 0x8860), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x1aa0)), f_q))
mstore(add(transcript, 0x8880), addmod(mload(add(transcript, 0x8860)), mload(add(transcript, 0x1ac0)), f_q))
mstore(add(transcript, 0x88a0), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x8880)), f_q))
mstore(add(transcript, 0x88c0), addmod(mload(add(transcript, 0x88a0)), mload(add(transcript, 0x1ae0)), f_q))
mstore(add(transcript, 0x88e0), addmod(mload(add(transcript, 0x88c0)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x8900), mulmod(mload(add(transcript, 0x88e0)), mload(add(transcript, 0x8840)), f_q))
mstore(add(transcript, 0x8920), addmod(mload(add(transcript, 0x86c0)), sub(f_q, mload(add(transcript, 0x8900))), f_q))
mstore(add(transcript, 0x8940), mulmod(mload(add(transcript, 0x8920)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x8960), addmod(mload(add(transcript, 0x8640)), mload(add(transcript, 0x8940)), f_q))
mstore(add(transcript, 0x8980), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x8960)), f_q))
mstore(add(transcript, 0x89a0), addmod(mload(add(transcript, 0x2580)), sub(f_q, mload(add(transcript, 0x25c0))), f_q))
mstore(add(transcript, 0x89c0), mulmod(mload(add(transcript, 0x89a0)), mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x89e0), addmod(mload(add(transcript, 0x8980)), mload(add(transcript, 0x89c0)), f_q))
mstore(add(transcript, 0x8a00), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x89e0)), f_q))
mstore(add(transcript, 0x8a20), mulmod(mload(add(transcript, 0x89a0)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x8a40), addmod(mload(add(transcript, 0x2580)), sub(f_q, mload(add(transcript, 0x25a0))), f_q))
mstore(add(transcript, 0x8a60), mulmod(mload(add(transcript, 0x8a40)), mload(add(transcript, 0x8a20)), f_q))
mstore(add(transcript, 0x8a80), addmod(mload(add(transcript, 0x8a00)), mload(add(transcript, 0x8a60)), f_q))
mstore(add(transcript, 0x8aa0), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x8a80)), f_q))
mstore(add(transcript, 0x8ac0), addmod(1, sub(f_q, mload(add(transcript, 0x25e0))), f_q))
mstore(add(transcript, 0x8ae0), mulmod(mload(add(transcript, 0x8ac0)), mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x8b00), addmod(mload(add(transcript, 0x8aa0)), mload(add(transcript, 0x8ae0)), f_q))
mstore(add(transcript, 0x8b20), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x8b00)), f_q))
mstore(add(transcript, 0x8b40), mulmod(mload(add(transcript, 0x25e0)), mload(add(transcript, 0x25e0)), f_q))
mstore(add(transcript, 0x8b60), addmod(mload(add(transcript, 0x8b40)), sub(f_q, mload(add(transcript, 0x25e0))), f_q))
mstore(add(transcript, 0x8b80), mulmod(mload(add(transcript, 0x8b60)), mload(add(transcript, 0x2f20)), f_q))
mstore(add(transcript, 0x8ba0), addmod(mload(add(transcript, 0x8b20)), mload(add(transcript, 0x8b80)), f_q))
mstore(add(transcript, 0x8bc0), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x8ba0)), f_q))
mstore(add(transcript, 0x8be0), addmod(mload(add(transcript, 0x2620)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x8c00), mulmod(mload(add(transcript, 0x8be0)), mload(add(transcript, 0x2600)), f_q))
mstore(add(transcript, 0x8c20), addmod(mload(add(transcript, 0x2660)), mload(add(transcript, 0xb60)), f_q))
mstore(add(transcript, 0x8c40), mulmod(mload(add(transcript, 0x8c20)), mload(add(transcript, 0x8c00)), f_q))
mstore(add(transcript, 0x8c60), mulmod(mload(add(transcript, 0x1820)), mload(add(transcript, 0x1740)), f_q))
mstore(add(transcript, 0x8c80), mulmod(mload(add(transcript, 0x1640)), mload(add(transcript, 0x8c60)), f_q))
mstore(add(transcript, 0x8ca0), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x8c80)), f_q))
mstore(add(transcript, 0x8cc0), addmod(mload(add(transcript, 0x8ca0)), 18446744073709551615, f_q))
mstore(add(transcript, 0x8ce0), mulmod(mload(add(transcript, 0x620)), mload(add(transcript, 0x8cc0)), f_q))
mstore(add(transcript, 0x8d00), mulmod(mload(add(transcript, 0x1800)), mload(add(transcript, 0x8c60)), f_q))
mstore(add(transcript, 0x8d20), addmod(1, sub(f_q, mload(add(transcript, 0x8c60))), f_q))
mstore(add(transcript, 0x8d40), mulmod(18446744073709551615, mload(add(transcript, 0x8d20)), f_q))
mstore(add(transcript, 0x8d60), addmod(mload(add(transcript, 0x8d00)), mload(add(transcript, 0x8d40)), f_q))
mstore(add(transcript, 0x8d80), addmod(mload(add(transcript, 0x8ce0)), mload(add(transcript, 0x8d60)), f_q))
mstore(add(transcript, 0x8da0), addmod(mload(add(transcript, 0x8d80)), mload(add(transcript, 0xb00)), f_q))
mstore(add(transcript, 0x8dc0), mulmod(mload(add(transcript, 0x8da0)), mload(add(transcript, 0x25e0)), f_q))
mstore(add(transcript, 0x8de0), mulmod(mload(add(transcript, 0x88e0)), mload(add(transcript, 0x8dc0)), f_q))
mstore(add(transcript, 0x8e00), addmod(mload(add(transcript, 0x8c40)), sub(f_q, mload(add(transcript, 0x8de0))), f_q))
mstore(add(transcript, 0x8e20), mulmod(mload(add(transcript, 0x8e00)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x8e40), addmod(mload(add(transcript, 0x8bc0)), mload(add(transcript, 0x8e20)), f_q))
mstore(add(transcript, 0x8e60), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x8e40)), f_q))
mstore(add(transcript, 0x8e80), addmod(mload(add(transcript, 0x2620)), sub(f_q, mload(add(transcript, 0x2660))), f_q))
mstore(add(transcript, 0x8ea0), mulmod(mload(add(transcript, 0x8e80)), mload(add(transcript, 0x3000)), f_q))
mstore(add(transcript, 0x8ec0), addmod(mload(add(transcript, 0x8e60)), mload(add(transcript, 0x8ea0)), f_q))
mstore(add(transcript, 0x8ee0), mulmod(mload(add(transcript, 0xfc0)), mload(add(transcript, 0x8ec0)), f_q))
mstore(add(transcript, 0x8f00), mulmod(mload(add(transcript, 0x8e80)), mload(add(transcript, 0x40c0)), f_q))
mstore(add(transcript, 0x8f20), addmod(mload(add(transcript, 0x2620)), sub(f_q, mload(add(transcript, 0x2640))), f_q))
mstore(add(transcript, 0x8f40), mulmod(mload(add(transcript, 0x8f20)), mload(add(transcript, 0x8f00)), f_q))
mstore(add(transcript, 0x8f60), addmod(mload(add(transcript, 0x8ee0)), mload(add(transcript, 0x8f40)), f_q))
mstore(add(transcript, 0x8f80), mulmod(mload(add(transcript, 0x2a20)), mload(add(transcript, 0x2a20)), f_q))
mstore(add(transcript, 0x8fa0), mulmod(mload(add(transcript, 0x8f80)), mload(add(transcript, 0x2a20)), f_q))
mstore(add(transcript, 0x8fc0), mulmod(mload(add(transcript, 0x8fa0)), mload(add(transcript, 0x2a20)), f_q))
mstore(add(transcript, 0x8fe0), mulmod(mload(add(transcript, 0x8fc0)), mload(add(transcript, 0x2a20)), f_q))
mstore(add(transcript, 0x9000), mulmod(1, mload(add(transcript, 0x2a20)), f_q))
mstore(add(transcript, 0x9020), mulmod(1, mload(add(transcript, 0x8f80)), f_q))
mstore(add(transcript, 0x9040), mulmod(1, mload(add(transcript, 0x8fa0)), f_q))
mstore(add(transcript, 0x9060), mulmod(1, mload(add(transcript, 0x8fc0)), f_q))
mstore(add(transcript, 0x9080), mulmod(mload(add(transcript, 0x8f60)), mload(add(transcript, 0x2a40)), f_q))
mstore(add(transcript, 0x90a0), mulmod(mload(add(transcript, 0x2820)), mload(add(transcript, 0x1160)), f_q))
mstore(add(transcript, 0x90c0), mulmod(mload(add(transcript, 0x1160)), 1, f_q))
mstore(add(transcript, 0x90e0), addmod(mload(add(transcript, 0x27a0)), sub(f_q, mload(add(transcript, 0x90c0))), f_q))
mstore(add(transcript, 0x9100), mulmod(mload(add(transcript, 0x1160)), 4443263508319656594054352481848447997537391617204595126809744742387004492585, f_q))
mstore(add(transcript, 0x9120), addmod(mload(add(transcript, 0x27a0)), sub(f_q, mload(add(transcript, 0x9100))), f_q))
mstore(add(transcript, 0x9140), mulmod(mload(add(transcript, 0x1160)), 11402394834529375719535454173347509224290498423785625657829583372803806900475, f_q))
mstore(add(transcript, 0x9160), addmod(mload(add(transcript, 0x27a0)), sub(f_q, mload(add(transcript, 0x9140))), f_q))
mstore(add(transcript, 0x9180), mulmod(mload(add(transcript, 0x1160)), 12491230264321380165669116208790466830459716800431293091713220204712467607643, f_q))
mstore(add(transcript, 0x91a0), addmod(mload(add(transcript, 0x27a0)), sub(f_q, mload(add(transcript, 0x9180))), f_q))
mstore(add(transcript, 0x91c0), mulmod(mload(add(transcript, 0x1160)), 21180393220728113421338195116216869725258066600961496947533653125588029756005, f_q))
mstore(add(transcript, 0x91e0), addmod(mload(add(transcript, 0x27a0)), sub(f_q, mload(add(transcript, 0x91c0))), f_q))
mstore(add(transcript, 0x9200), mulmod(mload(add(transcript, 0x1160)), 21846745818185811051373434299876022191132089169516983080959277716660228899818, f_q))
mstore(add(transcript, 0x9220), addmod(mload(add(transcript, 0x27a0)), sub(f_q, mload(add(transcript, 0x9200))), f_q))
{            let result := mulmod(mload(add(transcript, 0x27a0)), 8066282055787475901673420555035560535710817593291328670948830103998216087188, f_q)result := addmod(mulmod(mload(add(transcript, 0x1160)), 13821960816051799320572985190221714552837546807124705672749374082577592408429, f_q), result, f_q)mstore(add(transcript, 0x9240), result)        }
{            let result := mulmod(mload(add(transcript, 0x27a0)), 19968324678227145013248315861515595301245912644541587902686803196084490696647, f_q)result := addmod(mulmod(mload(add(transcript, 0x1160)), 2652279421035414460371318391121293595959370598409287323185787737283079651270, f_q), result, f_q)mstore(add(transcript, 0x9260), result)        }
{            let result := mulmod(mload(add(transcript, 0x27a0)), 2652279421035414460371318391121293595959370598409287323185787737283079651270, f_q)result := addmod(mulmod(mload(add(transcript, 0x1160)), 19367074469347227157046979956364450920724362242668588573146737185273452907601, f_q), result, f_q)mstore(add(transcript, 0x9280), result)        }
{            let result := mulmod(mload(add(transcript, 0x27a0)), 5728955065969648051880489897163235636379640954457863903141118671545973649876, f_q)result := addmod(mulmod(mload(add(transcript, 0x1160)), 11131803335553698406238999414095177806538558655198059953539642575164592088996, f_q), result, f_q)mstore(add(transcript, 0x92a0), result)        }
mstore(add(transcript, 0x92c0), mulmod(1, mload(add(transcript, 0x90e0)), f_q))
mstore(add(transcript, 0x92e0), mulmod(mload(add(transcript, 0x92c0)), mload(add(transcript, 0x9220)), f_q))
mstore(add(transcript, 0x9300), mulmod(mload(add(transcript, 0x92e0)), mload(add(transcript, 0x9120)), f_q))
mstore(add(transcript, 0x9320), mulmod(mload(add(transcript, 0x9300)), mload(add(transcript, 0x91a0)), f_q))
{            let result := mulmod(mload(add(transcript, 0x27a0)), 41497053653464170872971445381252897416275230899051262738926469915579595800, f_q)result := addmod(mulmod(mload(add(transcript, 0x1160)), 21846745818185811051373434299876022191132089169516983080959277716660228899817, f_q), result, f_q)mstore(add(transcript, 0x9340), result)        }
{            let result := mulmod(mload(add(transcript, 0x27a0)), 21846745818185811051373434299876022191132089169516983080959277716660228899817, f_q)result := addmod(mulmod(mload(add(transcript, 0x1160)), 17403482309866154457319081818027574193594697552312387954149532974273224407233, f_q), result, f_q)mstore(add(transcript, 0x9360), result)        }
{            let result := mulmod(mload(add(transcript, 0x27a0)), 1, f_q)result := addmod(mulmod(mload(add(transcript, 0x1160)), 21888242871839275222246405745257275088548364400416034343698204186575808495616, f_q), result, f_q)mstore(add(transcript, 0x9380), result)        }
{            let result := mulmod(mload(add(transcript, 0x27a0)), 10485848037309899502710951571909765864257865976630408685868620813772001595143, f_q)result := addmod(mulmod(mload(add(transcript, 0x1160)), 11402394834529375719535454173347509224290498423785625657829583372803806900474, f_q), result, f_q)mstore(add(transcript, 0x93a0), result)        }
{            let result := mulmod(mload(add(transcript, 0x27a0)), 11402394834529375719535454173347509224290498423785625657829583372803806900474, f_q)result := addmod(mulmod(mload(add(transcript, 0x1160)), 5545166320312543757176643718986770037302882363778492581314708552725780098827, f_q), result, f_q)mstore(add(transcript, 0x93c0), result)        }
mstore(add(transcript, 0x93e0), mulmod(mload(add(transcript, 0x92c0)), mload(add(transcript, 0x9160)), f_q))
{            let result := mulmod(mload(add(transcript, 0x27a0)), 19550482963636032496507824053356571186980560079138601892369352376314767105176, f_q)result := addmod(mulmod(mload(add(transcript, 0x1160)), 2337759908203242725738581691900703901567804321277432451328851810261041390441, f_q), result, f_q)mstore(add(transcript, 0x9400), result)        }
{            let result := mulmod(mload(add(transcript, 0x27a0)), 6864017523829827661538877064511657693937746400280130103616449492479205074625, f_q)result := addmod(mulmod(mload(add(transcript, 0x1160)), 8176406603941074973579828757454043030101025654304527229739395789558437229636, f_q), result, f_q)mstore(add(transcript, 0x9420), result)        }
{            let result := mulmod(mload(add(transcript, 0x27a0)), 1208363231502528720962640213919841679473696796176395546734070070553011066292, f_q)result := addmod(mulmod(mload(add(transcript, 0x1160)), 13927816816077446377946003702584403455282257763096126200719395408961442331222, f_q), result, f_q)mstore(add(transcript, 0x9440), result)        }
mstore(add(transcript, 0x9460), mulmod(mload(add(transcript, 0x92e0)), mload(add(transcript, 0x91e0)), f_q))
{            let prod := mload(add(transcript, 0x9240))                prod := mulmod(mload(add(transcript, 0x9260)), prod, f_q)                mstore(add(transcript, 0x9480), prod)                            prod := mulmod(mload(add(transcript, 0x9280)), prod, f_q)                mstore(add(transcript, 0x94a0), prod)                            prod := mulmod(mload(add(transcript, 0x92a0)), prod, f_q)                mstore(add(transcript, 0x94c0), prod)                            prod := mulmod(mload(add(transcript, 0x9340)), prod, f_q)                mstore(add(transcript, 0x94e0), prod)                            prod := mulmod(mload(add(transcript, 0x9360)), prod, f_q)                mstore(add(transcript, 0x9500), prod)                            prod := mulmod(mload(add(transcript, 0x92e0)), prod, f_q)                mstore(add(transcript, 0x9520), prod)                            prod := mulmod(mload(add(transcript, 0x9380)), prod, f_q)                mstore(add(transcript, 0x9540), prod)                            prod := mulmod(mload(add(transcript, 0x92c0)), prod, f_q)                mstore(add(transcript, 0x9560), prod)                            prod := mulmod(mload(add(transcript, 0x93a0)), prod, f_q)                mstore(add(transcript, 0x9580), prod)                            prod := mulmod(mload(add(transcript, 0x93c0)), prod, f_q)                mstore(add(transcript, 0x95a0), prod)                            prod := mulmod(mload(add(transcript, 0x93e0)), prod, f_q)                mstore(add(transcript, 0x95c0), prod)                            prod := mulmod(mload(add(transcript, 0x9400)), prod, f_q)                mstore(add(transcript, 0x95e0), prod)                            prod := mulmod(mload(add(transcript, 0x9420)), prod, f_q)                mstore(add(transcript, 0x9600), prod)                            prod := mulmod(mload(add(transcript, 0x9440)), prod, f_q)                mstore(add(transcript, 0x9620), prod)                            prod := mulmod(mload(add(transcript, 0x9460)), prod, f_q)                mstore(add(transcript, 0x9640), prod)                    }
mstore(add(transcript, 0x9680), 32)
mstore(add(transcript, 0x96a0), 32)
mstore(add(transcript, 0x96c0), 32)
mstore(add(transcript, 0x96e0), mload(add(transcript, 0x9640)))
mstore(add(transcript, 0x9700), 21888242871839275222246405745257275088548364400416034343698204186575808495615)
mstore(add(transcript, 0x9720), 21888242871839275222246405745257275088548364400416034343698204186575808495617)
success := and(eq(staticcall(gas(), 0x5, add(transcript, 0x9680), 0xc0, add(transcript, 0x9660), 0x20), 1), success)
{                        let inv := mload(add(transcript, 0x9660))            let v                            v := mload(add(transcript, 0x9460))                    mstore(add(transcript, 0x9460), mulmod(mload(add(transcript, 0x9620)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x9440))                    mstore(add(transcript, 0x9440), mulmod(mload(add(transcript, 0x9600)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x9420))                    mstore(add(transcript, 0x9420), mulmod(mload(add(transcript, 0x95e0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x9400))                    mstore(add(transcript, 0x9400), mulmod(mload(add(transcript, 0x95c0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x93e0))                    mstore(add(transcript, 0x93e0), mulmod(mload(add(transcript, 0x95a0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x93c0))                    mstore(add(transcript, 0x93c0), mulmod(mload(add(transcript, 0x9580)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x93a0))                    mstore(add(transcript, 0x93a0), mulmod(mload(add(transcript, 0x9560)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x92c0))                    mstore(add(transcript, 0x92c0), mulmod(mload(add(transcript, 0x9540)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x9380))                    mstore(add(transcript, 0x9380), mulmod(mload(add(transcript, 0x9520)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x92e0))                    mstore(add(transcript, 0x92e0), mulmod(mload(add(transcript, 0x9500)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x9360))                    mstore(add(transcript, 0x9360), mulmod(mload(add(transcript, 0x94e0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x9340))                    mstore(add(transcript, 0x9340), mulmod(mload(add(transcript, 0x94c0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x92a0))                    mstore(add(transcript, 0x92a0), mulmod(mload(add(transcript, 0x94a0)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x9280))                    mstore(add(transcript, 0x9280), mulmod(mload(add(transcript, 0x9480)), inv, f_q))                    inv := mulmod(v, inv, f_q)                                    v := mload(add(transcript, 0x9260))                    mstore(add(transcript, 0x9260), mulmod(mload(add(transcript, 0x9240)), inv, f_q))                    inv := mulmod(v, inv, f_q)                mstore(add(transcript, 0x9240), inv)        }
{            let result := mload(add(transcript, 0x9240))result := addmod(mload(add(transcript, 0x9260)), result, f_q)result := addmod(mload(add(transcript, 0x9280)), result, f_q)result := addmod(mload(add(transcript, 0x92a0)), result, f_q)mstore(add(transcript, 0x9740), result)        }
mstore(add(transcript, 0x9760), mulmod(mload(add(transcript, 0x9320)), mload(add(transcript, 0x92e0)), f_q))
{            let result := mload(add(transcript, 0x9340))result := addmod(mload(add(transcript, 0x9360)), result, f_q)mstore(add(transcript, 0x9780), result)        }
mstore(add(transcript, 0x97a0), mulmod(mload(add(transcript, 0x9320)), mload(add(transcript, 0x92c0)), f_q))
{            let result := mload(add(transcript, 0x9380))mstore(add(transcript, 0x97c0), result)        }
mstore(add(transcript, 0x97e0), mulmod(mload(add(transcript, 0x9320)), mload(add(transcript, 0x93e0)), f_q))
{            let result := mload(add(transcript, 0x93a0))result := addmod(mload(add(transcript, 0x93c0)), result, f_q)mstore(add(transcript, 0x9800), result)        }
mstore(add(transcript, 0x9820), mulmod(mload(add(transcript, 0x9320)), mload(add(transcript, 0x9460)), f_q))
{            let result := mload(add(transcript, 0x9400))result := addmod(mload(add(transcript, 0x9420)), result, f_q)result := addmod(mload(add(transcript, 0x9440)), result, f_q)mstore(add(transcript, 0x9840), result)        }

        }}
        // transcriptBytes = abi.encode(transcript.length, transcript);
        bytes32[] memory newTranscript = new bytes32[](_transcript.length);
        for(uint i=0; i<_transcript.length; i++) {
            newTranscript[i] = transcript[i];
        }
        return (success, newTranscript);
    } 
}
